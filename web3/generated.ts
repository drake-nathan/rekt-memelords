// Generated by @wagmi/cli@0.1.11 on 3/17/2023 at 7:05:29 PM
import {
  useNetwork,
  useContract,
  UseContractConfig,
  useContractRead,
  UseContractReadConfig,
  useContractWrite,
  Address,
  UseContractWriteConfig,
  usePrepareContractWrite,
  UsePrepareContractWriteConfig,
  useContractEvent,
  UseContractEventConfig,
} from 'wagmi';
import {
  ReadContractResult,
  WriteContractMode,
  PrepareWriteContractResult,
} from 'wagmi/actions';

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Token
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

/**
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x0b820E51631389C92e9aB12126a0434c04dBe02e)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xC3D6C236Dfe7922C94a56dEdf7E2e6f1DEc349c3)
 */
export const tokenABI = [
  { stateMutability: 'nonpayable', type: 'constructor', inputs: [] },
  {
    type: 'error',
    inputs: [
      { name: 'id', internalType: 'uint256', type: 'uint256' },
      { name: 'requested', internalType: 'uint256', type: 'uint256' },
      { name: 'maxSupply', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'ExceedsMaxSupply',
  },
  {
    type: 'error',
    inputs: [{ name: 'id', internalType: 'uint256', type: 'uint256' }],
    name: 'NotCurrentEdition',
  },
  {
    type: 'error',
    inputs: [{ name: 'operator', internalType: 'address', type: 'address' }],
    name: 'OperatorNotAllowed',
  },
  {
    type: 'error',
    inputs: [{ name: 'id', internalType: 'uint256', type: 'uint256' }],
    name: 'TokenNotInitialized',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'account',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'operator',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      { name: 'approved', internalType: 'bool', type: 'bool', indexed: false },
    ],
    name: 'ApprovalForAll',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'version', internalType: 'uint8', type: 'uint8', indexed: false },
    ],
    name: 'Initialized',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'previousOwner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'newOwner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'OwnershipTransferred',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'account',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'Paused',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'role', internalType: 'bytes32', type: 'bytes32', indexed: true },
      {
        name: 'previousAdminRole',
        internalType: 'bytes32',
        type: 'bytes32',
        indexed: true,
      },
      {
        name: 'newAdminRole',
        internalType: 'bytes32',
        type: 'bytes32',
        indexed: true,
      },
    ],
    name: 'RoleAdminChanged',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'role', internalType: 'bytes32', type: 'bytes32', indexed: true },
      {
        name: 'account',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'sender',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'RoleGranted',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'role', internalType: 'bytes32', type: 'bytes32', indexed: true },
      {
        name: 'account',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'sender',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'RoleRevoked',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'operator',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      { name: 'from', internalType: 'address', type: 'address', indexed: true },
      { name: 'to', internalType: 'address', type: 'address', indexed: true },
      {
        name: 'ids',
        internalType: 'uint256[]',
        type: 'uint256[]',
        indexed: false,
      },
      {
        name: 'values',
        internalType: 'uint256[]',
        type: 'uint256[]',
        indexed: false,
      },
    ],
    name: 'TransferBatch',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'operator',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      { name: 'from', internalType: 'address', type: 'address', indexed: true },
      { name: 'to', internalType: 'address', type: 'address', indexed: true },
      { name: 'id', internalType: 'uint256', type: 'uint256', indexed: false },
      {
        name: 'value',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'TransferSingle',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'value', internalType: 'string', type: 'string', indexed: false },
      { name: 'id', internalType: 'uint256', type: 'uint256', indexed: true },
    ],
    name: 'URI',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'account',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'Unpaused',
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'ADMIN_ROLE',
    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'DEFAULT_ADMIN_ROLE',
    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'MINTER_ROLE',
    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'account', internalType: 'address', type: 'address' },
      { name: 'id', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'balanceOf',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'accounts', internalType: 'address[]', type: 'address[]' },
      { name: 'ids', internalType: 'uint256[]', type: 'uint256[]' },
    ],
    name: 'balanceOfBatch',
    outputs: [{ name: '', internalType: 'uint256[]', type: 'uint256[]' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'account', internalType: 'address', type: 'address' },
      { name: 'id', internalType: 'uint256', type: 'uint256' },
      { name: 'value', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'burn',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'account', internalType: 'address', type: 'address' },
      { name: 'ids', internalType: 'uint256[]', type: 'uint256[]' },
      { name: 'values', internalType: 'uint256[]', type: 'uint256[]' },
    ],
    name: 'burnBatch',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'currentEdition',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    name: 'currentSupply',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'id', internalType: 'uint256', type: 'uint256' }],
    name: 'exists',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'role', internalType: 'bytes32', type: 'bytes32' }],
    name: 'getRoleAdmin',
    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'role', internalType: 'bytes32', type: 'bytes32' },
      { name: 'account', internalType: 'address', type: 'address' },
    ],
    name: 'grantRole',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'role', internalType: 'bytes32', type: 'bytes32' },
      { name: 'account', internalType: 'address', type: 'address' },
    ],
    name: 'hasRole',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'royaltySafe', internalType: 'address', type: 'address' },
      { name: 'devWallet', internalType: 'address', type: 'address' },
      { name: 'hmooreWallet', internalType: 'address', type: 'address' },
      { name: 'saintWallet', internalType: 'address', type: 'address' },
    ],
    name: 'initialize',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'tokenToInit', internalType: 'uint256', type: 'uint256' },
      { name: 'tokenMaxSupply', internalType: 'uint256', type: 'uint256' },
      { name: 'tokenURI', internalType: 'string', type: 'string' },
    ],
    name: 'initializeEdition',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'account', internalType: 'address', type: 'address' },
      { name: 'operator', internalType: 'address', type: 'address' },
    ],
    name: 'isApprovedForAll',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    name: 'maxSupply',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'account', internalType: 'address', type: 'address' },
      { name: 'id', internalType: 'uint256', type: 'uint256' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'mint',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'owner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'pause',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'paused',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'role', internalType: 'bytes32', type: 'bytes32' },
      { name: 'account', internalType: 'address', type: 'address' },
    ],
    name: 'renounceRole',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'role', internalType: 'bytes32', type: 'bytes32' },
      { name: 'account', internalType: 'address', type: 'address' },
    ],
    name: 'revokeRole',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: '_tokenId', internalType: 'uint256', type: 'uint256' },
      { name: '_salePrice', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'royaltyInfo',
    outputs: [
      { name: '', internalType: 'address', type: 'address' },
      { name: '', internalType: 'uint256', type: 'uint256' },
    ],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'ids', internalType: 'uint256[]', type: 'uint256[]' },
      { name: 'amounts', internalType: 'uint256[]', type: 'uint256[]' },
      { name: 'data', internalType: 'bytes', type: 'bytes' },
    ],
    name: 'safeBatchTransferFrom',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
      { name: 'data', internalType: 'bytes', type: 'bytes' },
    ],
    name: 'safeTransferFrom',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'operator', internalType: 'address', type: 'address' },
      { name: 'approved', internalType: 'bool', type: 'bool' },
    ],
    name: 'setApprovalForAll',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'newEdition', internalType: 'uint256', type: 'uint256' }],
    name: 'setCurrentEdition',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'id', internalType: 'uint256', type: 'uint256' },
      { name: 'newMaxSupply', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'setMaxSupply',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'royaltyAddress', internalType: 'address', type: 'address' },
      { name: 'royaltyBps', internalType: 'uint96', type: 'uint96' },
    ],
    name: 'setRoyaltyInfo',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'id', internalType: 'uint256', type: 'uint256' },
      { name: 'newuri', internalType: 'string', type: 'string' },
    ],
    name: 'setTokenURI',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'interfaceId', internalType: 'bytes4', type: 'bytes4' }],
    name: 'supportsInterface',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'tokenIdsMinted',
    outputs: [{ name: '', internalType: 'uint256[]', type: 'uint256[]' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'id', internalType: 'uint256', type: 'uint256' }],
    name: 'totalSupply',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],
    name: 'transferOwnership',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'unpause',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'id', internalType: 'uint256', type: 'uint256' }],
    name: 'uri',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
] as const;

/**
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x0b820E51631389C92e9aB12126a0434c04dBe02e)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xC3D6C236Dfe7922C94a56dEdf7E2e6f1DEc349c3)
 */
export const tokenAddress = {
  1: '0x0b820E51631389C92e9aB12126a0434c04dBe02e',
  5: '0xC3D6C236Dfe7922C94a56dEdf7E2e6f1DEc349c3',
} as const;

/**
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x0b820E51631389C92e9aB12126a0434c04dBe02e)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xC3D6C236Dfe7922C94a56dEdf7E2e6f1DEc349c3)
 */
export const tokenConfig = { address: tokenAddress, abi: tokenABI } as const;

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// MLD
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

/**
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x924F2a4D3e93cC595792292C84A41Ad3AEd70E95)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xe0c8D341bF2024F8f331aE1c78E66aE823D85f01)
 */
export const mldABI = [
  {
    stateMutability: 'nonpayable',
    type: 'constructor',
    inputs: [
      { name: 'merkleRoot', internalType: 'bytes32', type: 'bytes32' },
      { name: 'projectWallet', internalType: 'address', type: 'address' },
      { name: 'nateWallet', internalType: 'address', type: 'address' },
      { name: 'saintWallet', internalType: 'address', type: 'address' },
      { name: 'hmooreWallet', internalType: 'address', type: 'address' },
    ],
  },
  { type: 'error', inputs: [], name: 'ApprovalCallerNotOwnerNorApproved' },
  { type: 'error', inputs: [], name: 'ApprovalQueryForNonexistentToken' },
  { type: 'error', inputs: [], name: 'BalanceQueryForZeroAddress' },
  { type: 'error', inputs: [], name: 'DiscountAlreadyClaimed' },
  {
    type: 'error',
    inputs: [
      { name: 'sent', internalType: 'uint256', type: 'uint256' },
      { name: 'required', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'InsufficientPayment',
  },
  { type: 'error', inputs: [], name: 'InvalidMerkleProof' },
  { type: 'error', inputs: [], name: 'MaxTokenSupplyExceeded' },
  {
    type: 'error',
    inputs: [
      { name: 'requested', internalType: 'uint256', type: 'uint256' },
      { name: 'maximum', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'MaxTokensPerTransactionExceeded',
  },
  { type: 'error', inputs: [], name: 'MintERC2309QuantityExceedsLimit' },
  { type: 'error', inputs: [], name: 'MintToZeroAddress' },
  { type: 'error', inputs: [], name: 'MintZeroQuantity' },
  { type: 'error', inputs: [], name: 'MintedMaxTokens' },
  { type: 'error', inputs: [], name: 'MustMintAtLeastOne' },
  { type: 'error', inputs: [], name: 'OwnerQueryForNonexistentToken' },
  { type: 'error', inputs: [], name: 'OwnershipNotInitializedForExtraData' },
  { type: 'error', inputs: [], name: 'TransferCallerNotOwnerNorApproved' },
  { type: 'error', inputs: [], name: 'TransferFromIncorrectOwner' },
  { type: 'error', inputs: [], name: 'TransferToNonERC721ReceiverImplementer' },
  { type: 'error', inputs: [], name: 'TransferToZeroAddress' },
  { type: 'error', inputs: [], name: 'URIQueryForNonexistentToken' },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'owner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'approved',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'tokenId',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
    ],
    name: 'Approval',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'owner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'operator',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      { name: 'approved', internalType: 'bool', type: 'bool', indexed: false },
    ],
    name: 'ApprovalForAll',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'fromTokenId',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      {
        name: 'toTokenId',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      { name: 'from', internalType: 'address', type: 'address', indexed: true },
      { name: 'to', internalType: 'address', type: 'address', indexed: true },
    ],
    name: 'ConsecutiveTransfer',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'previousOwner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'newOwner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'OwnershipTransferred',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'account',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'Paused',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'from', internalType: 'address', type: 'address', indexed: true },
      { name: 'to', internalType: 'address', type: 'address', indexed: true },
      {
        name: 'tokenId',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
    ],
    name: 'Transfer',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'account',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'Unpaused',
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'DISCOUNT_PRICE',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'MAX_PURCHASE_DISCOUNT',
    outputs: [{ name: '', internalType: 'uint8', type: 'uint8' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'MAX_PURCHASE_PUBLIC',
    outputs: [{ name: '', internalType: 'uint8', type: 'uint8' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'MAX_SUPPLY',
    outputs: [{ name: '', internalType: 'uint16', type: 'uint16' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'MAX_TOKENS_PER_WALLET',
    outputs: [{ name: '', internalType: 'uint8', type: 'uint8' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'MINT_PRICE',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'payable',
    type: 'function',
    inputs: [
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'approve',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'owner', internalType: 'address', type: 'address' }],
    name: 'balanceOf',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'tokenId', internalType: 'uint256', type: 'uint256' }],
    name: 'burn',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'address', type: 'address' }],
    name: 'claimed',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'currentPhase',
    outputs: [
      {
        name: '',
        internalType: 'enum MemeLordDistrict.MintPhase',
        type: 'uint8',
      },
    ],
  },
  {
    stateMutability: 'payable',
    type: 'function',
    inputs: [
      { name: 'numberOfTokens', internalType: 'uint8', type: 'uint8' },
      { name: 'merkleProof', internalType: 'bytes32[]', type: 'bytes32[]' },
    ],
    name: 'discountMint',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'tokenId', internalType: 'uint256', type: 'uint256' }],
    name: 'getApproved',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'owner', internalType: 'address', type: 'address' },
      { name: 'operator', internalType: 'address', type: 'address' },
    ],
    name: 'isApprovedForAll',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'address', type: 'address' }],
    name: 'mintedPerWallet',
    outputs: [{ name: '', internalType: 'uint8', type: 'uint8' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'name',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'owner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'numberOfTokens', internalType: 'uint8', type: 'uint8' },
    ],
    name: 'ownerMint',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'tokenId', internalType: 'uint256', type: 'uint256' }],
    name: 'ownerOf',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'pause',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'paused',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'payable',
    type: 'function',
    inputs: [{ name: 'numberOfTokens', internalType: 'uint8', type: 'uint8' }],
    name: 'publicMint',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: '_tokenId', internalType: 'uint256', type: 'uint256' },
      { name: '_salePrice', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'royaltyInfo',
    outputs: [
      { name: '', internalType: 'address', type: 'address' },
      { name: '', internalType: 'uint256', type: 'uint256' },
    ],
  },
  {
    stateMutability: 'payable',
    type: 'function',
    inputs: [
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'safeTransferFrom',
    outputs: [],
  },
  {
    stateMutability: 'payable',
    type: 'function',
    inputs: [
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
      { name: '_data', internalType: 'bytes', type: 'bytes' },
    ],
    name: 'safeTransferFrom',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'operator', internalType: 'address', type: 'address' },
      { name: 'approved', internalType: 'bool', type: 'bool' },
    ],
    name: 'setApprovalForAll',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'newBase', internalType: 'string', type: 'string' }],
    name: 'setBaseURI',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'newPrice', internalType: 'uint256', type: 'uint256' }],
    name: 'setDiscountMintPrice',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'newMaxPurchaseCount', internalType: 'uint8', type: 'uint8' },
    ],
    name: 'setMaxPurchaseCount',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'newRoot', internalType: 'bytes32', type: 'bytes32' }],
    name: 'setMerkleRoot',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      {
        name: 'newPhase',
        internalType: 'enum MemeLordDistrict.MintPhase',
        type: 'uint8',
      },
    ],
    name: 'setMintPhase',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'newPrice', internalType: 'uint256', type: 'uint256' }],
    name: 'setPublicMintPrice',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'interfaceId', internalType: 'bytes4', type: 'bytes4' }],
    name: 'supportsInterface',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'symbol',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'tokenId', internalType: 'uint256', type: 'uint256' }],
    name: 'tokenURI',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'totalSupply',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'payable',
    type: 'function',
    inputs: [
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'transferFrom',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],
    name: 'transferOwnership',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'unpause',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'withdraw',
    outputs: [],
  },
] as const;

/**
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x924F2a4D3e93cC595792292C84A41Ad3AEd70E95)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xe0c8D341bF2024F8f331aE1c78E66aE823D85f01)
 */
export const mldAddress = {
  1: '0x924F2a4D3e93cC595792292C84A41Ad3AEd70E95',
  5: '0xe0c8D341bF2024F8f331aE1c78E66aE823D85f01',
} as const;

/**
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x924F2a4D3e93cC595792292C84A41Ad3AEd70E95)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xe0c8D341bF2024F8f331aE1c78E66aE823D85f01)
 */
export const mldConfig = { address: mldAddress, abi: mldABI } as const;

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// StoreFront
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

/**
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51AEe8Cb4512FF12551e0A598B8f45eb610550bE)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x35f7C5D0e916B9650DA1e47006FEf59cdCD4B452)
 */
export const storeFrontABI = [
  {
    stateMutability: 'nonpayable',
    type: 'constructor',
    inputs: [
      { name: 'delegateAddress', internalType: 'address', type: 'address' },
      { name: 'mldAddress', internalType: 'address', type: 'address' },
      { name: 'tokenAddress_', internalType: 'address', type: 'address' },
      { name: 'payees', internalType: 'address[]', type: 'address[]' },
      { name: 'paymentShares', internalType: 'uint256[]', type: 'uint256[]' },
      { name: 'devWallet', internalType: 'address', type: 'address' },
      { name: 'hmooreWallet', internalType: 'address', type: 'address' },
      { name: 'saintWallet', internalType: 'address', type: 'address' },
    ],
  },
  {
    type: 'error',
    inputs: [{ name: 'delegate', internalType: 'address', type: 'address' }],
    name: 'DelegateNotValid',
  },
  {
    type: 'error',
    inputs: [
      { name: 'sent', internalType: 'uint256', type: 'uint256' },
      { name: 'required', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'InsufficientPayment',
  },
  { type: 'error', inputs: [], name: 'MintClosed' },
  { type: 'error', inputs: [], name: 'MintNotFree' },
  {
    type: 'error',
    inputs: [
      { name: 'requester', internalType: 'address', type: 'address' },
      { name: 'id', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'NotOwnerOfEdition',
  },
  {
    type: 'error',
    inputs: [
      { name: 'requester', internalType: 'address', type: 'address' },
      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'NotOwnerOfMldToken',
  },
  {
    type: 'error',
    inputs: [{ name: 'tokenId', internalType: 'uint256', type: 'uint256' }],
    name: 'TokenClaimed',
  },
  {
    type: 'error',
    inputs: [
      { name: 'id', internalType: 'uint256', type: 'uint256' },
      { name: 'requested', internalType: 'uint256', type: 'uint256' },
      { name: 'maxSupply', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'TotalSupplyExceeded',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'token',
        internalType: 'contract IERC20',
        type: 'address',
        indexed: true,
      },
      { name: 'to', internalType: 'address', type: 'address', indexed: false },
      {
        name: 'amount',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'ERC20PaymentReleased',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'account',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'Paused',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'account',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'shares',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'PayeeAdded',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'from',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'amount',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'PaymentReceived',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'to', internalType: 'address', type: 'address', indexed: false },
      {
        name: 'amount',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'PaymentReleased',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'role', internalType: 'bytes32', type: 'bytes32', indexed: true },
      {
        name: 'previousAdminRole',
        internalType: 'bytes32',
        type: 'bytes32',
        indexed: true,
      },
      {
        name: 'newAdminRole',
        internalType: 'bytes32',
        type: 'bytes32',
        indexed: true,
      },
    ],
    name: 'RoleAdminChanged',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'role', internalType: 'bytes32', type: 'bytes32', indexed: true },
      {
        name: 'account',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'sender',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'RoleGranted',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'role', internalType: 'bytes32', type: 'bytes32', indexed: true },
      {
        name: 'account',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'sender',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'RoleRevoked',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'account',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'Unpaused',
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'ADMIN_ROLE',
    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'DEFAULT_ADMIN_ROLE',
    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'mldBurnTokenIds', internalType: 'uint16[]', type: 'uint16[]' },
    ],
    name: 'burnAndClaim',
    outputs: [],
  },
  {
    stateMutability: 'payable',
    type: 'function',
    inputs: [
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'mldClaimTokenIds', internalType: 'uint16[]', type: 'uint16[]' },
      { name: '_vault', internalType: 'address', type: 'address' },
    ],
    name: 'claim',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    name: 'claimed',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'currentEdition',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'mldClaimTokenIds', internalType: 'uint16[]', type: 'uint16[]' },
      { name: '_vault', internalType: 'address', type: 'address' },
    ],
    name: 'freeClaim',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'role', internalType: 'bytes32', type: 'bytes32' }],
    name: 'getRoleAdmin',
    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'role', internalType: 'bytes32', type: 'bytes32' },
      { name: 'account', internalType: 'address', type: 'address' },
    ],
    name: 'grantRole',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'role', internalType: 'bytes32', type: 'bytes32' },
      { name: 'account', internalType: 'address', type: 'address' },
    ],
    name: 'hasRole',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'isMintOpen',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'mintEnd',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'mintPerMld',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'mintPrice',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'mintStart',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'pause',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'paused',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'index', internalType: 'uint256', type: 'uint256' }],
    name: 'payee',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'account', internalType: 'address', type: 'address' }],
    name: 'releasable',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'token', internalType: 'contract IERC20', type: 'address' },
      { name: 'account', internalType: 'address', type: 'address' },
    ],
    name: 'releasable',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'account', internalType: 'address payable', type: 'address' },
    ],
    name: 'release',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'token', internalType: 'contract IERC20', type: 'address' },
      { name: 'account', internalType: 'address', type: 'address' },
    ],
    name: 'release',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'token', internalType: 'contract IERC20', type: 'address' },
      { name: 'account', internalType: 'address', type: 'address' },
    ],
    name: 'released',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'account', internalType: 'address', type: 'address' }],
    name: 'released',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'role', internalType: 'bytes32', type: 'bytes32' },
      { name: 'account', internalType: 'address', type: 'address' },
    ],
    name: 'renounceRole',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    name: 'requiredOwnerOf',
    outputs: [{ name: '', internalType: 'uint16', type: 'uint16' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'id', internalType: 'uint256', type: 'uint256' }],
    name: 'resetClaimed',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'resetClaimedList',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'role', internalType: 'bytes32', type: 'bytes32' },
      { name: 'account', internalType: 'address', type: 'address' },
    ],
    name: 'revokeRole',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'id', internalType: 'uint256', type: 'uint256' }],
    name: 'setClaimed',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'id', internalType: 'uint256', type: 'uint256' }],
    name: 'setCurrentEditionId',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'mintEnd_', internalType: 'uint256', type: 'uint256' }],
    name: 'setMintEnd',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'mintPerMld_', internalType: 'uint256', type: 'uint256' }],
    name: 'setMintPerMld',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'newPrice', internalType: 'uint256', type: 'uint256' }],
    name: 'setMintPrice',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'mintStart_', internalType: 'uint256', type: 'uint256' }],
    name: 'setMintStart',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'tokenAddress_', internalType: 'address', type: 'address' },
    ],
    name: 'setTokenAddress',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'id', internalType: 'uint256', type: 'uint256' },
      { name: 'maxSupply', internalType: 'uint256', type: 'uint256' },
      { name: 'startTime_', internalType: 'uint256', type: 'uint256' },
      { name: 'endTime_', internalType: 'uint256', type: 'uint256' },
      { name: 'uri', internalType: 'string', type: 'string' },
      { name: 'requiredOwnerOf_', internalType: 'uint16[]', type: 'uint16[]' },
    ],
    name: 'setupMint',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'account', internalType: 'address', type: 'address' }],
    name: 'shares',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'interfaceId', internalType: 'bytes4', type: 'bytes4' }],
    name: 'supportsInterface',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'tokenAddress',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'token', internalType: 'contract IERC20', type: 'address' },
    ],
    name: 'totalReleased',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'totalReleased',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'totalShares',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'unpause',
    outputs: [],
  },
  { stateMutability: 'payable', type: 'receive' },
] as const;

/**
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51AEe8Cb4512FF12551e0A598B8f45eb610550bE)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x35f7C5D0e916B9650DA1e47006FEf59cdCD4B452)
 */
export const storeFrontAddress = {
  1: '0x51AEe8Cb4512FF12551e0A598B8f45eb610550bE',
  5: '0x35f7C5D0e916B9650DA1e47006FEf59cdCD4B452',
} as const;

/**
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51AEe8Cb4512FF12551e0A598B8f45eb610550bE)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x35f7C5D0e916B9650DA1e47006FEf59cdCD4B452)
 */
export const storeFrontConfig = {
  address: storeFrontAddress,
  abi: storeFrontABI,
} as const;

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// React
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

/**
 * Wraps __{@link useContract}__ with `abi` set to __{@link tokenABI}__.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x0b820E51631389C92e9aB12126a0434c04dBe02e)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xC3D6C236Dfe7922C94a56dEdf7E2e6f1DEc349c3)
 */
export function useToken(
  config: Omit<UseContractConfig, 'abi' | 'address'> & {
    chainId?: keyof typeof tokenAddress;
  } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContract({
    abi: tokenABI,
    address: tokenAddress[chainId as keyof typeof tokenAddress],
    ...config,
  });
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link tokenABI}__.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x0b820E51631389C92e9aB12126a0434c04dBe02e)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xC3D6C236Dfe7922C94a56dEdf7E2e6f1DEc349c3)
 */
export function useTokenRead<
  TFunctionName extends string,
  TSelectData = ReadContractResult<typeof tokenABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof tokenABI, TFunctionName, TSelectData>,
    'abi' | 'address'
  > & { chainId?: keyof typeof tokenAddress } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractRead({
    abi: tokenABI,
    address: tokenAddress[chainId as keyof typeof tokenAddress],
    ...config,
  } as UseContractReadConfig<typeof tokenABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link tokenABI}__ and `functionName` set to `"ADMIN_ROLE"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x0b820E51631389C92e9aB12126a0434c04dBe02e)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xC3D6C236Dfe7922C94a56dEdf7E2e6f1DEc349c3)
 */
export function useTokenAdminRole<
  TSelectData = ReadContractResult<typeof tokenABI, 'ADMIN_ROLE'>,
>(
  config: Omit<
    UseContractReadConfig<typeof tokenABI, 'ADMIN_ROLE', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof tokenAddress } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractRead({
    abi: tokenABI,
    address: tokenAddress[chainId as keyof typeof tokenAddress],
    functionName: 'ADMIN_ROLE',
    ...config,
  } as UseContractReadConfig<typeof tokenABI, 'ADMIN_ROLE', TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link tokenABI}__ and `functionName` set to `"DEFAULT_ADMIN_ROLE"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x0b820E51631389C92e9aB12126a0434c04dBe02e)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xC3D6C236Dfe7922C94a56dEdf7E2e6f1DEc349c3)
 */
export function useTokenDefaultAdminRole<
  TSelectData = ReadContractResult<typeof tokenABI, 'DEFAULT_ADMIN_ROLE'>,
>(
  config: Omit<
    UseContractReadConfig<typeof tokenABI, 'DEFAULT_ADMIN_ROLE', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof tokenAddress } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractRead({
    abi: tokenABI,
    address: tokenAddress[chainId as keyof typeof tokenAddress],
    functionName: 'DEFAULT_ADMIN_ROLE',
    ...config,
  } as UseContractReadConfig<
    typeof tokenABI,
    'DEFAULT_ADMIN_ROLE',
    TSelectData
  >);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link tokenABI}__ and `functionName` set to `"MINTER_ROLE"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x0b820E51631389C92e9aB12126a0434c04dBe02e)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xC3D6C236Dfe7922C94a56dEdf7E2e6f1DEc349c3)
 */
export function useTokenMinterRole<
  TSelectData = ReadContractResult<typeof tokenABI, 'MINTER_ROLE'>,
>(
  config: Omit<
    UseContractReadConfig<typeof tokenABI, 'MINTER_ROLE', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof tokenAddress } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractRead({
    abi: tokenABI,
    address: tokenAddress[chainId as keyof typeof tokenAddress],
    functionName: 'MINTER_ROLE',
    ...config,
  } as UseContractReadConfig<typeof tokenABI, 'MINTER_ROLE', TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link tokenABI}__ and `functionName` set to `"balanceOf"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x0b820E51631389C92e9aB12126a0434c04dBe02e)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xC3D6C236Dfe7922C94a56dEdf7E2e6f1DEc349c3)
 */
export function useTokenBalanceOf<
  TSelectData = ReadContractResult<typeof tokenABI, 'balanceOf'>,
>(
  config: Omit<
    UseContractReadConfig<typeof tokenABI, 'balanceOf', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof tokenAddress } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractRead({
    abi: tokenABI,
    address: tokenAddress[chainId as keyof typeof tokenAddress],
    functionName: 'balanceOf',
    ...config,
  } as UseContractReadConfig<typeof tokenABI, 'balanceOf', TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link tokenABI}__ and `functionName` set to `"balanceOfBatch"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x0b820E51631389C92e9aB12126a0434c04dBe02e)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xC3D6C236Dfe7922C94a56dEdf7E2e6f1DEc349c3)
 */
export function useTokenBalanceOfBatch<
  TSelectData = ReadContractResult<typeof tokenABI, 'balanceOfBatch'>,
>(
  config: Omit<
    UseContractReadConfig<typeof tokenABI, 'balanceOfBatch', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof tokenAddress } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractRead({
    abi: tokenABI,
    address: tokenAddress[chainId as keyof typeof tokenAddress],
    functionName: 'balanceOfBatch',
    ...config,
  } as UseContractReadConfig<typeof tokenABI, 'balanceOfBatch', TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link tokenABI}__ and `functionName` set to `"currentEdition"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x0b820E51631389C92e9aB12126a0434c04dBe02e)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xC3D6C236Dfe7922C94a56dEdf7E2e6f1DEc349c3)
 */
export function useTokenCurrentEdition<
  TSelectData = ReadContractResult<typeof tokenABI, 'currentEdition'>,
>(
  config: Omit<
    UseContractReadConfig<typeof tokenABI, 'currentEdition', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof tokenAddress } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractRead({
    abi: tokenABI,
    address: tokenAddress[chainId as keyof typeof tokenAddress],
    functionName: 'currentEdition',
    ...config,
  } as UseContractReadConfig<typeof tokenABI, 'currentEdition', TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link tokenABI}__ and `functionName` set to `"currentSupply"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x0b820E51631389C92e9aB12126a0434c04dBe02e)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xC3D6C236Dfe7922C94a56dEdf7E2e6f1DEc349c3)
 */
export function useTokenCurrentSupply<
  TSelectData = ReadContractResult<typeof tokenABI, 'currentSupply'>,
>(
  config: Omit<
    UseContractReadConfig<typeof tokenABI, 'currentSupply', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof tokenAddress } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractRead({
    abi: tokenABI,
    address: tokenAddress[chainId as keyof typeof tokenAddress],
    functionName: 'currentSupply',
    ...config,
  } as UseContractReadConfig<typeof tokenABI, 'currentSupply', TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link tokenABI}__ and `functionName` set to `"exists"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x0b820E51631389C92e9aB12126a0434c04dBe02e)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xC3D6C236Dfe7922C94a56dEdf7E2e6f1DEc349c3)
 */
export function useTokenExists<
  TSelectData = ReadContractResult<typeof tokenABI, 'exists'>,
>(
  config: Omit<
    UseContractReadConfig<typeof tokenABI, 'exists', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof tokenAddress } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractRead({
    abi: tokenABI,
    address: tokenAddress[chainId as keyof typeof tokenAddress],
    functionName: 'exists',
    ...config,
  } as UseContractReadConfig<typeof tokenABI, 'exists', TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link tokenABI}__ and `functionName` set to `"getRoleAdmin"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x0b820E51631389C92e9aB12126a0434c04dBe02e)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xC3D6C236Dfe7922C94a56dEdf7E2e6f1DEc349c3)
 */
export function useTokenGetRoleAdmin<
  TSelectData = ReadContractResult<typeof tokenABI, 'getRoleAdmin'>,
>(
  config: Omit<
    UseContractReadConfig<typeof tokenABI, 'getRoleAdmin', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof tokenAddress } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractRead({
    abi: tokenABI,
    address: tokenAddress[chainId as keyof typeof tokenAddress],
    functionName: 'getRoleAdmin',
    ...config,
  } as UseContractReadConfig<typeof tokenABI, 'getRoleAdmin', TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link tokenABI}__ and `functionName` set to `"hasRole"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x0b820E51631389C92e9aB12126a0434c04dBe02e)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xC3D6C236Dfe7922C94a56dEdf7E2e6f1DEc349c3)
 */
export function useTokenHasRole<
  TSelectData = ReadContractResult<typeof tokenABI, 'hasRole'>,
>(
  config: Omit<
    UseContractReadConfig<typeof tokenABI, 'hasRole', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof tokenAddress } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractRead({
    abi: tokenABI,
    address: tokenAddress[chainId as keyof typeof tokenAddress],
    functionName: 'hasRole',
    ...config,
  } as UseContractReadConfig<typeof tokenABI, 'hasRole', TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link tokenABI}__ and `functionName` set to `"isApprovedForAll"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x0b820E51631389C92e9aB12126a0434c04dBe02e)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xC3D6C236Dfe7922C94a56dEdf7E2e6f1DEc349c3)
 */
export function useTokenIsApprovedForAll<
  TSelectData = ReadContractResult<typeof tokenABI, 'isApprovedForAll'>,
>(
  config: Omit<
    UseContractReadConfig<typeof tokenABI, 'isApprovedForAll', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof tokenAddress } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractRead({
    abi: tokenABI,
    address: tokenAddress[chainId as keyof typeof tokenAddress],
    functionName: 'isApprovedForAll',
    ...config,
  } as UseContractReadConfig<typeof tokenABI, 'isApprovedForAll', TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link tokenABI}__ and `functionName` set to `"maxSupply"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x0b820E51631389C92e9aB12126a0434c04dBe02e)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xC3D6C236Dfe7922C94a56dEdf7E2e6f1DEc349c3)
 */
export function useTokenMaxSupply<
  TSelectData = ReadContractResult<typeof tokenABI, 'maxSupply'>,
>(
  config: Omit<
    UseContractReadConfig<typeof tokenABI, 'maxSupply', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof tokenAddress } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractRead({
    abi: tokenABI,
    address: tokenAddress[chainId as keyof typeof tokenAddress],
    functionName: 'maxSupply',
    ...config,
  } as UseContractReadConfig<typeof tokenABI, 'maxSupply', TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link tokenABI}__ and `functionName` set to `"owner"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x0b820E51631389C92e9aB12126a0434c04dBe02e)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xC3D6C236Dfe7922C94a56dEdf7E2e6f1DEc349c3)
 */
export function useTokenOwner<
  TSelectData = ReadContractResult<typeof tokenABI, 'owner'>,
>(
  config: Omit<
    UseContractReadConfig<typeof tokenABI, 'owner', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof tokenAddress } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractRead({
    abi: tokenABI,
    address: tokenAddress[chainId as keyof typeof tokenAddress],
    functionName: 'owner',
    ...config,
  } as UseContractReadConfig<typeof tokenABI, 'owner', TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link tokenABI}__ and `functionName` set to `"paused"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x0b820E51631389C92e9aB12126a0434c04dBe02e)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xC3D6C236Dfe7922C94a56dEdf7E2e6f1DEc349c3)
 */
export function useTokenPaused<
  TSelectData = ReadContractResult<typeof tokenABI, 'paused'>,
>(
  config: Omit<
    UseContractReadConfig<typeof tokenABI, 'paused', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof tokenAddress } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractRead({
    abi: tokenABI,
    address: tokenAddress[chainId as keyof typeof tokenAddress],
    functionName: 'paused',
    ...config,
  } as UseContractReadConfig<typeof tokenABI, 'paused', TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link tokenABI}__ and `functionName` set to `"royaltyInfo"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x0b820E51631389C92e9aB12126a0434c04dBe02e)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xC3D6C236Dfe7922C94a56dEdf7E2e6f1DEc349c3)
 */
export function useTokenRoyaltyInfo<
  TSelectData = ReadContractResult<typeof tokenABI, 'royaltyInfo'>,
>(
  config: Omit<
    UseContractReadConfig<typeof tokenABI, 'royaltyInfo', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof tokenAddress } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractRead({
    abi: tokenABI,
    address: tokenAddress[chainId as keyof typeof tokenAddress],
    functionName: 'royaltyInfo',
    ...config,
  } as UseContractReadConfig<typeof tokenABI, 'royaltyInfo', TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link tokenABI}__ and `functionName` set to `"supportsInterface"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x0b820E51631389C92e9aB12126a0434c04dBe02e)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xC3D6C236Dfe7922C94a56dEdf7E2e6f1DEc349c3)
 */
export function useTokenSupportsInterface<
  TSelectData = ReadContractResult<typeof tokenABI, 'supportsInterface'>,
>(
  config: Omit<
    UseContractReadConfig<typeof tokenABI, 'supportsInterface', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof tokenAddress } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractRead({
    abi: tokenABI,
    address: tokenAddress[chainId as keyof typeof tokenAddress],
    functionName: 'supportsInterface',
    ...config,
  } as UseContractReadConfig<
    typeof tokenABI,
    'supportsInterface',
    TSelectData
  >);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link tokenABI}__ and `functionName` set to `"tokenIdsMinted"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x0b820E51631389C92e9aB12126a0434c04dBe02e)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xC3D6C236Dfe7922C94a56dEdf7E2e6f1DEc349c3)
 */
export function useTokenTokenIdsMinted<
  TSelectData = ReadContractResult<typeof tokenABI, 'tokenIdsMinted'>,
>(
  config: Omit<
    UseContractReadConfig<typeof tokenABI, 'tokenIdsMinted', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof tokenAddress } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractRead({
    abi: tokenABI,
    address: tokenAddress[chainId as keyof typeof tokenAddress],
    functionName: 'tokenIdsMinted',
    ...config,
  } as UseContractReadConfig<typeof tokenABI, 'tokenIdsMinted', TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link tokenABI}__ and `functionName` set to `"totalSupply"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x0b820E51631389C92e9aB12126a0434c04dBe02e)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xC3D6C236Dfe7922C94a56dEdf7E2e6f1DEc349c3)
 */
export function useTokenTotalSupply<
  TSelectData = ReadContractResult<typeof tokenABI, 'totalSupply'>,
>(
  config: Omit<
    UseContractReadConfig<typeof tokenABI, 'totalSupply', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof tokenAddress } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractRead({
    abi: tokenABI,
    address: tokenAddress[chainId as keyof typeof tokenAddress],
    functionName: 'totalSupply',
    ...config,
  } as UseContractReadConfig<typeof tokenABI, 'totalSupply', TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link tokenABI}__ and `functionName` set to `"uri"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x0b820E51631389C92e9aB12126a0434c04dBe02e)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xC3D6C236Dfe7922C94a56dEdf7E2e6f1DEc349c3)
 */
export function useTokenUri<
  TSelectData = ReadContractResult<typeof tokenABI, 'uri'>,
>(
  config: Omit<
    UseContractReadConfig<typeof tokenABI, 'uri', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof tokenAddress } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractRead({
    abi: tokenABI,
    address: tokenAddress[chainId as keyof typeof tokenAddress],
    functionName: 'uri',
    ...config,
  } as UseContractReadConfig<typeof tokenABI, 'uri', TSelectData>);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link tokenABI}__.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x0b820E51631389C92e9aB12126a0434c04dBe02e)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xC3D6C236Dfe7922C94a56dEdf7E2e6f1DEc349c3)
 */
export function useTokenWrite<
  TMode extends WriteContractMode,
  TFunctionName extends string,
  TChainId extends number = keyof typeof tokenAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof tokenABI, string>['abi'],
        TFunctionName
      > & { address?: Address; chainId?: TChainId }
    : UseContractWriteConfig<TMode, typeof tokenABI, TFunctionName> & {
        abi?: never;
        address?: never;
        chainId?: TChainId;
      } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractWrite<TMode, typeof tokenABI, TFunctionName>({
    abi: tokenABI,
    address: tokenAddress[chainId as keyof typeof tokenAddress],
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link tokenABI}__ and `functionName` set to `"burn"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x0b820E51631389C92e9aB12126a0434c04dBe02e)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xC3D6C236Dfe7922C94a56dEdf7E2e6f1DEc349c3)
 */
export function useTokenBurn<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof tokenAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof tokenABI, 'burn'>['abi'],
        'burn'
      > & { address?: Address; chainId?: TChainId; functionName?: 'burn' }
    : UseContractWriteConfig<TMode, typeof tokenABI, 'burn'> & {
        abi?: never;
        address?: never;
        chainId?: TChainId;
        functionName?: 'burn';
      } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractWrite<TMode, typeof tokenABI, 'burn'>({
    abi: tokenABI,
    address: tokenAddress[chainId as keyof typeof tokenAddress],
    functionName: 'burn',
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link tokenABI}__ and `functionName` set to `"burnBatch"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x0b820E51631389C92e9aB12126a0434c04dBe02e)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xC3D6C236Dfe7922C94a56dEdf7E2e6f1DEc349c3)
 */
export function useTokenBurnBatch<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof tokenAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof tokenABI, 'burnBatch'>['abi'],
        'burnBatch'
      > & { address?: Address; chainId?: TChainId; functionName?: 'burnBatch' }
    : UseContractWriteConfig<TMode, typeof tokenABI, 'burnBatch'> & {
        abi?: never;
        address?: never;
        chainId?: TChainId;
        functionName?: 'burnBatch';
      } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractWrite<TMode, typeof tokenABI, 'burnBatch'>({
    abi: tokenABI,
    address: tokenAddress[chainId as keyof typeof tokenAddress],
    functionName: 'burnBatch',
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link tokenABI}__ and `functionName` set to `"grantRole"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x0b820E51631389C92e9aB12126a0434c04dBe02e)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xC3D6C236Dfe7922C94a56dEdf7E2e6f1DEc349c3)
 */
export function useTokenGrantRole<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof tokenAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof tokenABI, 'grantRole'>['abi'],
        'grantRole'
      > & { address?: Address; chainId?: TChainId; functionName?: 'grantRole' }
    : UseContractWriteConfig<TMode, typeof tokenABI, 'grantRole'> & {
        abi?: never;
        address?: never;
        chainId?: TChainId;
        functionName?: 'grantRole';
      } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractWrite<TMode, typeof tokenABI, 'grantRole'>({
    abi: tokenABI,
    address: tokenAddress[chainId as keyof typeof tokenAddress],
    functionName: 'grantRole',
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link tokenABI}__ and `functionName` set to `"initialize"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x0b820E51631389C92e9aB12126a0434c04dBe02e)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xC3D6C236Dfe7922C94a56dEdf7E2e6f1DEc349c3)
 */
export function useTokenInitialize<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof tokenAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof tokenABI, 'initialize'>['abi'],
        'initialize'
      > & { address?: Address; chainId?: TChainId; functionName?: 'initialize' }
    : UseContractWriteConfig<TMode, typeof tokenABI, 'initialize'> & {
        abi?: never;
        address?: never;
        chainId?: TChainId;
        functionName?: 'initialize';
      } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractWrite<TMode, typeof tokenABI, 'initialize'>({
    abi: tokenABI,
    address: tokenAddress[chainId as keyof typeof tokenAddress],
    functionName: 'initialize',
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link tokenABI}__ and `functionName` set to `"initializeEdition"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x0b820E51631389C92e9aB12126a0434c04dBe02e)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xC3D6C236Dfe7922C94a56dEdf7E2e6f1DEc349c3)
 */
export function useTokenInitializeEdition<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof tokenAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof tokenABI, 'initializeEdition'>['abi'],
        'initializeEdition'
      > & {
        address?: Address;
        chainId?: TChainId;
        functionName?: 'initializeEdition';
      }
    : UseContractWriteConfig<TMode, typeof tokenABI, 'initializeEdition'> & {
        abi?: never;
        address?: never;
        chainId?: TChainId;
        functionName?: 'initializeEdition';
      } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractWrite<TMode, typeof tokenABI, 'initializeEdition'>({
    abi: tokenABI,
    address: tokenAddress[chainId as keyof typeof tokenAddress],
    functionName: 'initializeEdition',
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link tokenABI}__ and `functionName` set to `"mint"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x0b820E51631389C92e9aB12126a0434c04dBe02e)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xC3D6C236Dfe7922C94a56dEdf7E2e6f1DEc349c3)
 */
export function useTokenMint<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof tokenAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof tokenABI, 'mint'>['abi'],
        'mint'
      > & { address?: Address; chainId?: TChainId; functionName?: 'mint' }
    : UseContractWriteConfig<TMode, typeof tokenABI, 'mint'> & {
        abi?: never;
        address?: never;
        chainId?: TChainId;
        functionName?: 'mint';
      } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractWrite<TMode, typeof tokenABI, 'mint'>({
    abi: tokenABI,
    address: tokenAddress[chainId as keyof typeof tokenAddress],
    functionName: 'mint',
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link tokenABI}__ and `functionName` set to `"pause"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x0b820E51631389C92e9aB12126a0434c04dBe02e)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xC3D6C236Dfe7922C94a56dEdf7E2e6f1DEc349c3)
 */
export function useTokenPause<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof tokenAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof tokenABI, 'pause'>['abi'],
        'pause'
      > & { address?: Address; chainId?: TChainId; functionName?: 'pause' }
    : UseContractWriteConfig<TMode, typeof tokenABI, 'pause'> & {
        abi?: never;
        address?: never;
        chainId?: TChainId;
        functionName?: 'pause';
      } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractWrite<TMode, typeof tokenABI, 'pause'>({
    abi: tokenABI,
    address: tokenAddress[chainId as keyof typeof tokenAddress],
    functionName: 'pause',
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link tokenABI}__ and `functionName` set to `"renounceOwnership"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x0b820E51631389C92e9aB12126a0434c04dBe02e)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xC3D6C236Dfe7922C94a56dEdf7E2e6f1DEc349c3)
 */
export function useTokenRenounceOwnership<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof tokenAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof tokenABI, 'renounceOwnership'>['abi'],
        'renounceOwnership'
      > & {
        address?: Address;
        chainId?: TChainId;
        functionName?: 'renounceOwnership';
      }
    : UseContractWriteConfig<TMode, typeof tokenABI, 'renounceOwnership'> & {
        abi?: never;
        address?: never;
        chainId?: TChainId;
        functionName?: 'renounceOwnership';
      } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractWrite<TMode, typeof tokenABI, 'renounceOwnership'>({
    abi: tokenABI,
    address: tokenAddress[chainId as keyof typeof tokenAddress],
    functionName: 'renounceOwnership',
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link tokenABI}__ and `functionName` set to `"renounceRole"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x0b820E51631389C92e9aB12126a0434c04dBe02e)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xC3D6C236Dfe7922C94a56dEdf7E2e6f1DEc349c3)
 */
export function useTokenRenounceRole<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof tokenAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof tokenABI, 'renounceRole'>['abi'],
        'renounceRole'
      > & {
        address?: Address;
        chainId?: TChainId;
        functionName?: 'renounceRole';
      }
    : UseContractWriteConfig<TMode, typeof tokenABI, 'renounceRole'> & {
        abi?: never;
        address?: never;
        chainId?: TChainId;
        functionName?: 'renounceRole';
      } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractWrite<TMode, typeof tokenABI, 'renounceRole'>({
    abi: tokenABI,
    address: tokenAddress[chainId as keyof typeof tokenAddress],
    functionName: 'renounceRole',
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link tokenABI}__ and `functionName` set to `"revokeRole"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x0b820E51631389C92e9aB12126a0434c04dBe02e)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xC3D6C236Dfe7922C94a56dEdf7E2e6f1DEc349c3)
 */
export function useTokenRevokeRole<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof tokenAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof tokenABI, 'revokeRole'>['abi'],
        'revokeRole'
      > & { address?: Address; chainId?: TChainId; functionName?: 'revokeRole' }
    : UseContractWriteConfig<TMode, typeof tokenABI, 'revokeRole'> & {
        abi?: never;
        address?: never;
        chainId?: TChainId;
        functionName?: 'revokeRole';
      } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractWrite<TMode, typeof tokenABI, 'revokeRole'>({
    abi: tokenABI,
    address: tokenAddress[chainId as keyof typeof tokenAddress],
    functionName: 'revokeRole',
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link tokenABI}__ and `functionName` set to `"safeBatchTransferFrom"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x0b820E51631389C92e9aB12126a0434c04dBe02e)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xC3D6C236Dfe7922C94a56dEdf7E2e6f1DEc349c3)
 */
export function useTokenSafeBatchTransferFrom<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof tokenAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof tokenABI,
          'safeBatchTransferFrom'
        >['abi'],
        'safeBatchTransferFrom'
      > & {
        address?: Address;
        chainId?: TChainId;
        functionName?: 'safeBatchTransferFrom';
      }
    : UseContractWriteConfig<
        TMode,
        typeof tokenABI,
        'safeBatchTransferFrom'
      > & {
        abi?: never;
        address?: never;
        chainId?: TChainId;
        functionName?: 'safeBatchTransferFrom';
      } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractWrite<TMode, typeof tokenABI, 'safeBatchTransferFrom'>({
    abi: tokenABI,
    address: tokenAddress[chainId as keyof typeof tokenAddress],
    functionName: 'safeBatchTransferFrom',
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link tokenABI}__ and `functionName` set to `"safeTransferFrom"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x0b820E51631389C92e9aB12126a0434c04dBe02e)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xC3D6C236Dfe7922C94a56dEdf7E2e6f1DEc349c3)
 */
export function useTokenSafeTransferFrom<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof tokenAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof tokenABI, 'safeTransferFrom'>['abi'],
        'safeTransferFrom'
      > & {
        address?: Address;
        chainId?: TChainId;
        functionName?: 'safeTransferFrom';
      }
    : UseContractWriteConfig<TMode, typeof tokenABI, 'safeTransferFrom'> & {
        abi?: never;
        address?: never;
        chainId?: TChainId;
        functionName?: 'safeTransferFrom';
      } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractWrite<TMode, typeof tokenABI, 'safeTransferFrom'>({
    abi: tokenABI,
    address: tokenAddress[chainId as keyof typeof tokenAddress],
    functionName: 'safeTransferFrom',
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link tokenABI}__ and `functionName` set to `"setApprovalForAll"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x0b820E51631389C92e9aB12126a0434c04dBe02e)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xC3D6C236Dfe7922C94a56dEdf7E2e6f1DEc349c3)
 */
export function useTokenSetApprovalForAll<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof tokenAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof tokenABI, 'setApprovalForAll'>['abi'],
        'setApprovalForAll'
      > & {
        address?: Address;
        chainId?: TChainId;
        functionName?: 'setApprovalForAll';
      }
    : UseContractWriteConfig<TMode, typeof tokenABI, 'setApprovalForAll'> & {
        abi?: never;
        address?: never;
        chainId?: TChainId;
        functionName?: 'setApprovalForAll';
      } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractWrite<TMode, typeof tokenABI, 'setApprovalForAll'>({
    abi: tokenABI,
    address: tokenAddress[chainId as keyof typeof tokenAddress],
    functionName: 'setApprovalForAll',
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link tokenABI}__ and `functionName` set to `"setCurrentEdition"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x0b820E51631389C92e9aB12126a0434c04dBe02e)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xC3D6C236Dfe7922C94a56dEdf7E2e6f1DEc349c3)
 */
export function useTokenSetCurrentEdition<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof tokenAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof tokenABI, 'setCurrentEdition'>['abi'],
        'setCurrentEdition'
      > & {
        address?: Address;
        chainId?: TChainId;
        functionName?: 'setCurrentEdition';
      }
    : UseContractWriteConfig<TMode, typeof tokenABI, 'setCurrentEdition'> & {
        abi?: never;
        address?: never;
        chainId?: TChainId;
        functionName?: 'setCurrentEdition';
      } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractWrite<TMode, typeof tokenABI, 'setCurrentEdition'>({
    abi: tokenABI,
    address: tokenAddress[chainId as keyof typeof tokenAddress],
    functionName: 'setCurrentEdition',
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link tokenABI}__ and `functionName` set to `"setMaxSupply"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x0b820E51631389C92e9aB12126a0434c04dBe02e)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xC3D6C236Dfe7922C94a56dEdf7E2e6f1DEc349c3)
 */
export function useTokenSetMaxSupply<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof tokenAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof tokenABI, 'setMaxSupply'>['abi'],
        'setMaxSupply'
      > & {
        address?: Address;
        chainId?: TChainId;
        functionName?: 'setMaxSupply';
      }
    : UseContractWriteConfig<TMode, typeof tokenABI, 'setMaxSupply'> & {
        abi?: never;
        address?: never;
        chainId?: TChainId;
        functionName?: 'setMaxSupply';
      } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractWrite<TMode, typeof tokenABI, 'setMaxSupply'>({
    abi: tokenABI,
    address: tokenAddress[chainId as keyof typeof tokenAddress],
    functionName: 'setMaxSupply',
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link tokenABI}__ and `functionName` set to `"setRoyaltyInfo"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x0b820E51631389C92e9aB12126a0434c04dBe02e)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xC3D6C236Dfe7922C94a56dEdf7E2e6f1DEc349c3)
 */
export function useTokenSetRoyaltyInfo<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof tokenAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof tokenABI, 'setRoyaltyInfo'>['abi'],
        'setRoyaltyInfo'
      > & {
        address?: Address;
        chainId?: TChainId;
        functionName?: 'setRoyaltyInfo';
      }
    : UseContractWriteConfig<TMode, typeof tokenABI, 'setRoyaltyInfo'> & {
        abi?: never;
        address?: never;
        chainId?: TChainId;
        functionName?: 'setRoyaltyInfo';
      } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractWrite<TMode, typeof tokenABI, 'setRoyaltyInfo'>({
    abi: tokenABI,
    address: tokenAddress[chainId as keyof typeof tokenAddress],
    functionName: 'setRoyaltyInfo',
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link tokenABI}__ and `functionName` set to `"setTokenURI"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x0b820E51631389C92e9aB12126a0434c04dBe02e)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xC3D6C236Dfe7922C94a56dEdf7E2e6f1DEc349c3)
 */
export function useTokenSetTokenUri<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof tokenAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof tokenABI, 'setTokenURI'>['abi'],
        'setTokenURI'
      > & {
        address?: Address;
        chainId?: TChainId;
        functionName?: 'setTokenURI';
      }
    : UseContractWriteConfig<TMode, typeof tokenABI, 'setTokenURI'> & {
        abi?: never;
        address?: never;
        chainId?: TChainId;
        functionName?: 'setTokenURI';
      } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractWrite<TMode, typeof tokenABI, 'setTokenURI'>({
    abi: tokenABI,
    address: tokenAddress[chainId as keyof typeof tokenAddress],
    functionName: 'setTokenURI',
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link tokenABI}__ and `functionName` set to `"transferOwnership"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x0b820E51631389C92e9aB12126a0434c04dBe02e)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xC3D6C236Dfe7922C94a56dEdf7E2e6f1DEc349c3)
 */
export function useTokenTransferOwnership<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof tokenAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof tokenABI, 'transferOwnership'>['abi'],
        'transferOwnership'
      > & {
        address?: Address;
        chainId?: TChainId;
        functionName?: 'transferOwnership';
      }
    : UseContractWriteConfig<TMode, typeof tokenABI, 'transferOwnership'> & {
        abi?: never;
        address?: never;
        chainId?: TChainId;
        functionName?: 'transferOwnership';
      } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractWrite<TMode, typeof tokenABI, 'transferOwnership'>({
    abi: tokenABI,
    address: tokenAddress[chainId as keyof typeof tokenAddress],
    functionName: 'transferOwnership',
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link tokenABI}__ and `functionName` set to `"unpause"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x0b820E51631389C92e9aB12126a0434c04dBe02e)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xC3D6C236Dfe7922C94a56dEdf7E2e6f1DEc349c3)
 */
export function useTokenUnpause<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof tokenAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof tokenABI, 'unpause'>['abi'],
        'unpause'
      > & { address?: Address; chainId?: TChainId; functionName?: 'unpause' }
    : UseContractWriteConfig<TMode, typeof tokenABI, 'unpause'> & {
        abi?: never;
        address?: never;
        chainId?: TChainId;
        functionName?: 'unpause';
      } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractWrite<TMode, typeof tokenABI, 'unpause'>({
    abi: tokenABI,
    address: tokenAddress[chainId as keyof typeof tokenAddress],
    functionName: 'unpause',
    ...config,
  } as any);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link tokenABI}__.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x0b820E51631389C92e9aB12126a0434c04dBe02e)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xC3D6C236Dfe7922C94a56dEdf7E2e6f1DEc349c3)
 */
export function usePrepareTokenWrite<TFunctionName extends string>(
  config: Omit<
    UsePrepareContractWriteConfig<typeof tokenABI, TFunctionName>,
    'abi' | 'address'
  > & { chainId?: keyof typeof tokenAddress } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return usePrepareContractWrite({
    abi: tokenABI,
    address: tokenAddress[chainId as keyof typeof tokenAddress],
    ...config,
  } as UsePrepareContractWriteConfig<typeof tokenABI, TFunctionName>);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link tokenABI}__ and `functionName` set to `"burn"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x0b820E51631389C92e9aB12126a0434c04dBe02e)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xC3D6C236Dfe7922C94a56dEdf7E2e6f1DEc349c3)
 */
export function usePrepareTokenBurn(
  config: Omit<
    UsePrepareContractWriteConfig<typeof tokenABI, 'burn'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof tokenAddress } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return usePrepareContractWrite({
    abi: tokenABI,
    address: tokenAddress[chainId as keyof typeof tokenAddress],
    functionName: 'burn',
    ...config,
  } as UsePrepareContractWriteConfig<typeof tokenABI, 'burn'>);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link tokenABI}__ and `functionName` set to `"burnBatch"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x0b820E51631389C92e9aB12126a0434c04dBe02e)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xC3D6C236Dfe7922C94a56dEdf7E2e6f1DEc349c3)
 */
export function usePrepareTokenBurnBatch(
  config: Omit<
    UsePrepareContractWriteConfig<typeof tokenABI, 'burnBatch'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof tokenAddress } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return usePrepareContractWrite({
    abi: tokenABI,
    address: tokenAddress[chainId as keyof typeof tokenAddress],
    functionName: 'burnBatch',
    ...config,
  } as UsePrepareContractWriteConfig<typeof tokenABI, 'burnBatch'>);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link tokenABI}__ and `functionName` set to `"grantRole"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x0b820E51631389C92e9aB12126a0434c04dBe02e)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xC3D6C236Dfe7922C94a56dEdf7E2e6f1DEc349c3)
 */
export function usePrepareTokenGrantRole(
  config: Omit<
    UsePrepareContractWriteConfig<typeof tokenABI, 'grantRole'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof tokenAddress } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return usePrepareContractWrite({
    abi: tokenABI,
    address: tokenAddress[chainId as keyof typeof tokenAddress],
    functionName: 'grantRole',
    ...config,
  } as UsePrepareContractWriteConfig<typeof tokenABI, 'grantRole'>);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link tokenABI}__ and `functionName` set to `"initialize"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x0b820E51631389C92e9aB12126a0434c04dBe02e)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xC3D6C236Dfe7922C94a56dEdf7E2e6f1DEc349c3)
 */
export function usePrepareTokenInitialize(
  config: Omit<
    UsePrepareContractWriteConfig<typeof tokenABI, 'initialize'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof tokenAddress } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return usePrepareContractWrite({
    abi: tokenABI,
    address: tokenAddress[chainId as keyof typeof tokenAddress],
    functionName: 'initialize',
    ...config,
  } as UsePrepareContractWriteConfig<typeof tokenABI, 'initialize'>);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link tokenABI}__ and `functionName` set to `"initializeEdition"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x0b820E51631389C92e9aB12126a0434c04dBe02e)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xC3D6C236Dfe7922C94a56dEdf7E2e6f1DEc349c3)
 */
export function usePrepareTokenInitializeEdition(
  config: Omit<
    UsePrepareContractWriteConfig<typeof tokenABI, 'initializeEdition'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof tokenAddress } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return usePrepareContractWrite({
    abi: tokenABI,
    address: tokenAddress[chainId as keyof typeof tokenAddress],
    functionName: 'initializeEdition',
    ...config,
  } as UsePrepareContractWriteConfig<typeof tokenABI, 'initializeEdition'>);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link tokenABI}__ and `functionName` set to `"mint"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x0b820E51631389C92e9aB12126a0434c04dBe02e)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xC3D6C236Dfe7922C94a56dEdf7E2e6f1DEc349c3)
 */
export function usePrepareTokenMint(
  config: Omit<
    UsePrepareContractWriteConfig<typeof tokenABI, 'mint'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof tokenAddress } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return usePrepareContractWrite({
    abi: tokenABI,
    address: tokenAddress[chainId as keyof typeof tokenAddress],
    functionName: 'mint',
    ...config,
  } as UsePrepareContractWriteConfig<typeof tokenABI, 'mint'>);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link tokenABI}__ and `functionName` set to `"pause"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x0b820E51631389C92e9aB12126a0434c04dBe02e)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xC3D6C236Dfe7922C94a56dEdf7E2e6f1DEc349c3)
 */
export function usePrepareTokenPause(
  config: Omit<
    UsePrepareContractWriteConfig<typeof tokenABI, 'pause'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof tokenAddress } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return usePrepareContractWrite({
    abi: tokenABI,
    address: tokenAddress[chainId as keyof typeof tokenAddress],
    functionName: 'pause',
    ...config,
  } as UsePrepareContractWriteConfig<typeof tokenABI, 'pause'>);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link tokenABI}__ and `functionName` set to `"renounceOwnership"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x0b820E51631389C92e9aB12126a0434c04dBe02e)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xC3D6C236Dfe7922C94a56dEdf7E2e6f1DEc349c3)
 */
export function usePrepareTokenRenounceOwnership(
  config: Omit<
    UsePrepareContractWriteConfig<typeof tokenABI, 'renounceOwnership'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof tokenAddress } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return usePrepareContractWrite({
    abi: tokenABI,
    address: tokenAddress[chainId as keyof typeof tokenAddress],
    functionName: 'renounceOwnership',
    ...config,
  } as UsePrepareContractWriteConfig<typeof tokenABI, 'renounceOwnership'>);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link tokenABI}__ and `functionName` set to `"renounceRole"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x0b820E51631389C92e9aB12126a0434c04dBe02e)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xC3D6C236Dfe7922C94a56dEdf7E2e6f1DEc349c3)
 */
export function usePrepareTokenRenounceRole(
  config: Omit<
    UsePrepareContractWriteConfig<typeof tokenABI, 'renounceRole'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof tokenAddress } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return usePrepareContractWrite({
    abi: tokenABI,
    address: tokenAddress[chainId as keyof typeof tokenAddress],
    functionName: 'renounceRole',
    ...config,
  } as UsePrepareContractWriteConfig<typeof tokenABI, 'renounceRole'>);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link tokenABI}__ and `functionName` set to `"revokeRole"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x0b820E51631389C92e9aB12126a0434c04dBe02e)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xC3D6C236Dfe7922C94a56dEdf7E2e6f1DEc349c3)
 */
export function usePrepareTokenRevokeRole(
  config: Omit<
    UsePrepareContractWriteConfig<typeof tokenABI, 'revokeRole'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof tokenAddress } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return usePrepareContractWrite({
    abi: tokenABI,
    address: tokenAddress[chainId as keyof typeof tokenAddress],
    functionName: 'revokeRole',
    ...config,
  } as UsePrepareContractWriteConfig<typeof tokenABI, 'revokeRole'>);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link tokenABI}__ and `functionName` set to `"safeBatchTransferFrom"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x0b820E51631389C92e9aB12126a0434c04dBe02e)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xC3D6C236Dfe7922C94a56dEdf7E2e6f1DEc349c3)
 */
export function usePrepareTokenSafeBatchTransferFrom(
  config: Omit<
    UsePrepareContractWriteConfig<typeof tokenABI, 'safeBatchTransferFrom'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof tokenAddress } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return usePrepareContractWrite({
    abi: tokenABI,
    address: tokenAddress[chainId as keyof typeof tokenAddress],
    functionName: 'safeBatchTransferFrom',
    ...config,
  } as UsePrepareContractWriteConfig<typeof tokenABI, 'safeBatchTransferFrom'>);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link tokenABI}__ and `functionName` set to `"safeTransferFrom"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x0b820E51631389C92e9aB12126a0434c04dBe02e)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xC3D6C236Dfe7922C94a56dEdf7E2e6f1DEc349c3)
 */
export function usePrepareTokenSafeTransferFrom(
  config: Omit<
    UsePrepareContractWriteConfig<typeof tokenABI, 'safeTransferFrom'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof tokenAddress } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return usePrepareContractWrite({
    abi: tokenABI,
    address: tokenAddress[chainId as keyof typeof tokenAddress],
    functionName: 'safeTransferFrom',
    ...config,
  } as UsePrepareContractWriteConfig<typeof tokenABI, 'safeTransferFrom'>);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link tokenABI}__ and `functionName` set to `"setApprovalForAll"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x0b820E51631389C92e9aB12126a0434c04dBe02e)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xC3D6C236Dfe7922C94a56dEdf7E2e6f1DEc349c3)
 */
export function usePrepareTokenSetApprovalForAll(
  config: Omit<
    UsePrepareContractWriteConfig<typeof tokenABI, 'setApprovalForAll'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof tokenAddress } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return usePrepareContractWrite({
    abi: tokenABI,
    address: tokenAddress[chainId as keyof typeof tokenAddress],
    functionName: 'setApprovalForAll',
    ...config,
  } as UsePrepareContractWriteConfig<typeof tokenABI, 'setApprovalForAll'>);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link tokenABI}__ and `functionName` set to `"setCurrentEdition"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x0b820E51631389C92e9aB12126a0434c04dBe02e)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xC3D6C236Dfe7922C94a56dEdf7E2e6f1DEc349c3)
 */
export function usePrepareTokenSetCurrentEdition(
  config: Omit<
    UsePrepareContractWriteConfig<typeof tokenABI, 'setCurrentEdition'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof tokenAddress } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return usePrepareContractWrite({
    abi: tokenABI,
    address: tokenAddress[chainId as keyof typeof tokenAddress],
    functionName: 'setCurrentEdition',
    ...config,
  } as UsePrepareContractWriteConfig<typeof tokenABI, 'setCurrentEdition'>);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link tokenABI}__ and `functionName` set to `"setMaxSupply"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x0b820E51631389C92e9aB12126a0434c04dBe02e)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xC3D6C236Dfe7922C94a56dEdf7E2e6f1DEc349c3)
 */
export function usePrepareTokenSetMaxSupply(
  config: Omit<
    UsePrepareContractWriteConfig<typeof tokenABI, 'setMaxSupply'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof tokenAddress } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return usePrepareContractWrite({
    abi: tokenABI,
    address: tokenAddress[chainId as keyof typeof tokenAddress],
    functionName: 'setMaxSupply',
    ...config,
  } as UsePrepareContractWriteConfig<typeof tokenABI, 'setMaxSupply'>);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link tokenABI}__ and `functionName` set to `"setRoyaltyInfo"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x0b820E51631389C92e9aB12126a0434c04dBe02e)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xC3D6C236Dfe7922C94a56dEdf7E2e6f1DEc349c3)
 */
export function usePrepareTokenSetRoyaltyInfo(
  config: Omit<
    UsePrepareContractWriteConfig<typeof tokenABI, 'setRoyaltyInfo'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof tokenAddress } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return usePrepareContractWrite({
    abi: tokenABI,
    address: tokenAddress[chainId as keyof typeof tokenAddress],
    functionName: 'setRoyaltyInfo',
    ...config,
  } as UsePrepareContractWriteConfig<typeof tokenABI, 'setRoyaltyInfo'>);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link tokenABI}__ and `functionName` set to `"setTokenURI"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x0b820E51631389C92e9aB12126a0434c04dBe02e)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xC3D6C236Dfe7922C94a56dEdf7E2e6f1DEc349c3)
 */
export function usePrepareTokenSetTokenUri(
  config: Omit<
    UsePrepareContractWriteConfig<typeof tokenABI, 'setTokenURI'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof tokenAddress } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return usePrepareContractWrite({
    abi: tokenABI,
    address: tokenAddress[chainId as keyof typeof tokenAddress],
    functionName: 'setTokenURI',
    ...config,
  } as UsePrepareContractWriteConfig<typeof tokenABI, 'setTokenURI'>);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link tokenABI}__ and `functionName` set to `"transferOwnership"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x0b820E51631389C92e9aB12126a0434c04dBe02e)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xC3D6C236Dfe7922C94a56dEdf7E2e6f1DEc349c3)
 */
export function usePrepareTokenTransferOwnership(
  config: Omit<
    UsePrepareContractWriteConfig<typeof tokenABI, 'transferOwnership'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof tokenAddress } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return usePrepareContractWrite({
    abi: tokenABI,
    address: tokenAddress[chainId as keyof typeof tokenAddress],
    functionName: 'transferOwnership',
    ...config,
  } as UsePrepareContractWriteConfig<typeof tokenABI, 'transferOwnership'>);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link tokenABI}__ and `functionName` set to `"unpause"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x0b820E51631389C92e9aB12126a0434c04dBe02e)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xC3D6C236Dfe7922C94a56dEdf7E2e6f1DEc349c3)
 */
export function usePrepareTokenUnpause(
  config: Omit<
    UsePrepareContractWriteConfig<typeof tokenABI, 'unpause'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof tokenAddress } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return usePrepareContractWrite({
    abi: tokenABI,
    address: tokenAddress[chainId as keyof typeof tokenAddress],
    functionName: 'unpause',
    ...config,
  } as UsePrepareContractWriteConfig<typeof tokenABI, 'unpause'>);
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link tokenABI}__.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x0b820E51631389C92e9aB12126a0434c04dBe02e)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xC3D6C236Dfe7922C94a56dEdf7E2e6f1DEc349c3)
 */
export function useTokenEvent<TEventName extends string>(
  config: Omit<
    UseContractEventConfig<typeof tokenABI, TEventName>,
    'abi' | 'address'
  > & { chainId?: keyof typeof tokenAddress } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractEvent({
    abi: tokenABI,
    address: tokenAddress[chainId as keyof typeof tokenAddress],
    ...config,
  } as UseContractEventConfig<typeof tokenABI, TEventName>);
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link tokenABI}__ and `eventName` set to `"ApprovalForAll"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x0b820E51631389C92e9aB12126a0434c04dBe02e)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xC3D6C236Dfe7922C94a56dEdf7E2e6f1DEc349c3)
 */
export function useTokenApprovalForAllEvent(
  config: Omit<
    UseContractEventConfig<typeof tokenABI, 'ApprovalForAll'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof tokenAddress } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractEvent({
    abi: tokenABI,
    address: tokenAddress[chainId as keyof typeof tokenAddress],
    eventName: 'ApprovalForAll',
    ...config,
  } as UseContractEventConfig<typeof tokenABI, 'ApprovalForAll'>);
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link tokenABI}__ and `eventName` set to `"Initialized"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x0b820E51631389C92e9aB12126a0434c04dBe02e)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xC3D6C236Dfe7922C94a56dEdf7E2e6f1DEc349c3)
 */
export function useTokenInitializedEvent(
  config: Omit<
    UseContractEventConfig<typeof tokenABI, 'Initialized'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof tokenAddress } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractEvent({
    abi: tokenABI,
    address: tokenAddress[chainId as keyof typeof tokenAddress],
    eventName: 'Initialized',
    ...config,
  } as UseContractEventConfig<typeof tokenABI, 'Initialized'>);
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link tokenABI}__ and `eventName` set to `"OwnershipTransferred"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x0b820E51631389C92e9aB12126a0434c04dBe02e)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xC3D6C236Dfe7922C94a56dEdf7E2e6f1DEc349c3)
 */
export function useTokenOwnershipTransferredEvent(
  config: Omit<
    UseContractEventConfig<typeof tokenABI, 'OwnershipTransferred'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof tokenAddress } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractEvent({
    abi: tokenABI,
    address: tokenAddress[chainId as keyof typeof tokenAddress],
    eventName: 'OwnershipTransferred',
    ...config,
  } as UseContractEventConfig<typeof tokenABI, 'OwnershipTransferred'>);
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link tokenABI}__ and `eventName` set to `"Paused"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x0b820E51631389C92e9aB12126a0434c04dBe02e)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xC3D6C236Dfe7922C94a56dEdf7E2e6f1DEc349c3)
 */
export function useTokenPausedEvent(
  config: Omit<
    UseContractEventConfig<typeof tokenABI, 'Paused'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof tokenAddress } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractEvent({
    abi: tokenABI,
    address: tokenAddress[chainId as keyof typeof tokenAddress],
    eventName: 'Paused',
    ...config,
  } as UseContractEventConfig<typeof tokenABI, 'Paused'>);
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link tokenABI}__ and `eventName` set to `"RoleAdminChanged"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x0b820E51631389C92e9aB12126a0434c04dBe02e)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xC3D6C236Dfe7922C94a56dEdf7E2e6f1DEc349c3)
 */
export function useTokenRoleAdminChangedEvent(
  config: Omit<
    UseContractEventConfig<typeof tokenABI, 'RoleAdminChanged'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof tokenAddress } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractEvent({
    abi: tokenABI,
    address: tokenAddress[chainId as keyof typeof tokenAddress],
    eventName: 'RoleAdminChanged',
    ...config,
  } as UseContractEventConfig<typeof tokenABI, 'RoleAdminChanged'>);
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link tokenABI}__ and `eventName` set to `"RoleGranted"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x0b820E51631389C92e9aB12126a0434c04dBe02e)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xC3D6C236Dfe7922C94a56dEdf7E2e6f1DEc349c3)
 */
export function useTokenRoleGrantedEvent(
  config: Omit<
    UseContractEventConfig<typeof tokenABI, 'RoleGranted'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof tokenAddress } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractEvent({
    abi: tokenABI,
    address: tokenAddress[chainId as keyof typeof tokenAddress],
    eventName: 'RoleGranted',
    ...config,
  } as UseContractEventConfig<typeof tokenABI, 'RoleGranted'>);
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link tokenABI}__ and `eventName` set to `"RoleRevoked"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x0b820E51631389C92e9aB12126a0434c04dBe02e)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xC3D6C236Dfe7922C94a56dEdf7E2e6f1DEc349c3)
 */
export function useTokenRoleRevokedEvent(
  config: Omit<
    UseContractEventConfig<typeof tokenABI, 'RoleRevoked'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof tokenAddress } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractEvent({
    abi: tokenABI,
    address: tokenAddress[chainId as keyof typeof tokenAddress],
    eventName: 'RoleRevoked',
    ...config,
  } as UseContractEventConfig<typeof tokenABI, 'RoleRevoked'>);
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link tokenABI}__ and `eventName` set to `"TransferBatch"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x0b820E51631389C92e9aB12126a0434c04dBe02e)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xC3D6C236Dfe7922C94a56dEdf7E2e6f1DEc349c3)
 */
export function useTokenTransferBatchEvent(
  config: Omit<
    UseContractEventConfig<typeof tokenABI, 'TransferBatch'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof tokenAddress } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractEvent({
    abi: tokenABI,
    address: tokenAddress[chainId as keyof typeof tokenAddress],
    eventName: 'TransferBatch',
    ...config,
  } as UseContractEventConfig<typeof tokenABI, 'TransferBatch'>);
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link tokenABI}__ and `eventName` set to `"TransferSingle"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x0b820E51631389C92e9aB12126a0434c04dBe02e)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xC3D6C236Dfe7922C94a56dEdf7E2e6f1DEc349c3)
 */
export function useTokenTransferSingleEvent(
  config: Omit<
    UseContractEventConfig<typeof tokenABI, 'TransferSingle'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof tokenAddress } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractEvent({
    abi: tokenABI,
    address: tokenAddress[chainId as keyof typeof tokenAddress],
    eventName: 'TransferSingle',
    ...config,
  } as UseContractEventConfig<typeof tokenABI, 'TransferSingle'>);
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link tokenABI}__ and `eventName` set to `"URI"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x0b820E51631389C92e9aB12126a0434c04dBe02e)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xC3D6C236Dfe7922C94a56dEdf7E2e6f1DEc349c3)
 */
export function useTokenUriEvent(
  config: Omit<
    UseContractEventConfig<typeof tokenABI, 'URI'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof tokenAddress } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractEvent({
    abi: tokenABI,
    address: tokenAddress[chainId as keyof typeof tokenAddress],
    eventName: 'URI',
    ...config,
  } as UseContractEventConfig<typeof tokenABI, 'URI'>);
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link tokenABI}__ and `eventName` set to `"Unpaused"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x0b820E51631389C92e9aB12126a0434c04dBe02e)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xC3D6C236Dfe7922C94a56dEdf7E2e6f1DEc349c3)
 */
export function useTokenUnpausedEvent(
  config: Omit<
    UseContractEventConfig<typeof tokenABI, 'Unpaused'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof tokenAddress } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractEvent({
    abi: tokenABI,
    address: tokenAddress[chainId as keyof typeof tokenAddress],
    eventName: 'Unpaused',
    ...config,
  } as UseContractEventConfig<typeof tokenABI, 'Unpaused'>);
}

/**
 * Wraps __{@link useContract}__ with `abi` set to __{@link mldABI}__.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x924F2a4D3e93cC595792292C84A41Ad3AEd70E95)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xe0c8D341bF2024F8f331aE1c78E66aE823D85f01)
 */
export function useMld(
  config: Omit<UseContractConfig, 'abi' | 'address'> & {
    chainId?: keyof typeof mldAddress;
  } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContract({
    abi: mldABI,
    address: mldAddress[chainId as keyof typeof mldAddress],
    ...config,
  });
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link mldABI}__.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x924F2a4D3e93cC595792292C84A41Ad3AEd70E95)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xe0c8D341bF2024F8f331aE1c78E66aE823D85f01)
 */
export function useMldRead<
  TFunctionName extends string,
  TSelectData = ReadContractResult<typeof mldABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof mldABI, TFunctionName, TSelectData>,
    'abi' | 'address'
  > & { chainId?: keyof typeof mldAddress } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractRead({
    abi: mldABI,
    address: mldAddress[chainId as keyof typeof mldAddress],
    ...config,
  } as UseContractReadConfig<typeof mldABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link mldABI}__ and `functionName` set to `"DISCOUNT_PRICE"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x924F2a4D3e93cC595792292C84A41Ad3AEd70E95)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xe0c8D341bF2024F8f331aE1c78E66aE823D85f01)
 */
export function useMldDiscountPrice<
  TSelectData = ReadContractResult<typeof mldABI, 'DISCOUNT_PRICE'>,
>(
  config: Omit<
    UseContractReadConfig<typeof mldABI, 'DISCOUNT_PRICE', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof mldAddress } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractRead({
    abi: mldABI,
    address: mldAddress[chainId as keyof typeof mldAddress],
    functionName: 'DISCOUNT_PRICE',
    ...config,
  } as UseContractReadConfig<typeof mldABI, 'DISCOUNT_PRICE', TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link mldABI}__ and `functionName` set to `"MAX_PURCHASE_DISCOUNT"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x924F2a4D3e93cC595792292C84A41Ad3AEd70E95)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xe0c8D341bF2024F8f331aE1c78E66aE823D85f01)
 */
export function useMldMaxPurchaseDiscount<
  TSelectData = ReadContractResult<typeof mldABI, 'MAX_PURCHASE_DISCOUNT'>,
>(
  config: Omit<
    UseContractReadConfig<typeof mldABI, 'MAX_PURCHASE_DISCOUNT', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof mldAddress } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractRead({
    abi: mldABI,
    address: mldAddress[chainId as keyof typeof mldAddress],
    functionName: 'MAX_PURCHASE_DISCOUNT',
    ...config,
  } as UseContractReadConfig<
    typeof mldABI,
    'MAX_PURCHASE_DISCOUNT',
    TSelectData
  >);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link mldABI}__ and `functionName` set to `"MAX_PURCHASE_PUBLIC"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x924F2a4D3e93cC595792292C84A41Ad3AEd70E95)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xe0c8D341bF2024F8f331aE1c78E66aE823D85f01)
 */
export function useMldMaxPurchasePublic<
  TSelectData = ReadContractResult<typeof mldABI, 'MAX_PURCHASE_PUBLIC'>,
>(
  config: Omit<
    UseContractReadConfig<typeof mldABI, 'MAX_PURCHASE_PUBLIC', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof mldAddress } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractRead({
    abi: mldABI,
    address: mldAddress[chainId as keyof typeof mldAddress],
    functionName: 'MAX_PURCHASE_PUBLIC',
    ...config,
  } as UseContractReadConfig<
    typeof mldABI,
    'MAX_PURCHASE_PUBLIC',
    TSelectData
  >);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link mldABI}__ and `functionName` set to `"MAX_SUPPLY"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x924F2a4D3e93cC595792292C84A41Ad3AEd70E95)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xe0c8D341bF2024F8f331aE1c78E66aE823D85f01)
 */
export function useMldMaxSupply<
  TSelectData = ReadContractResult<typeof mldABI, 'MAX_SUPPLY'>,
>(
  config: Omit<
    UseContractReadConfig<typeof mldABI, 'MAX_SUPPLY', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof mldAddress } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractRead({
    abi: mldABI,
    address: mldAddress[chainId as keyof typeof mldAddress],
    functionName: 'MAX_SUPPLY',
    ...config,
  } as UseContractReadConfig<typeof mldABI, 'MAX_SUPPLY', TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link mldABI}__ and `functionName` set to `"MAX_TOKENS_PER_WALLET"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x924F2a4D3e93cC595792292C84A41Ad3AEd70E95)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xe0c8D341bF2024F8f331aE1c78E66aE823D85f01)
 */
export function useMldMaxTokensPerWallet<
  TSelectData = ReadContractResult<typeof mldABI, 'MAX_TOKENS_PER_WALLET'>,
>(
  config: Omit<
    UseContractReadConfig<typeof mldABI, 'MAX_TOKENS_PER_WALLET', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof mldAddress } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractRead({
    abi: mldABI,
    address: mldAddress[chainId as keyof typeof mldAddress],
    functionName: 'MAX_TOKENS_PER_WALLET',
    ...config,
  } as UseContractReadConfig<
    typeof mldABI,
    'MAX_TOKENS_PER_WALLET',
    TSelectData
  >);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link mldABI}__ and `functionName` set to `"MINT_PRICE"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x924F2a4D3e93cC595792292C84A41Ad3AEd70E95)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xe0c8D341bF2024F8f331aE1c78E66aE823D85f01)
 */
export function useMldMintPrice<
  TSelectData = ReadContractResult<typeof mldABI, 'MINT_PRICE'>,
>(
  config: Omit<
    UseContractReadConfig<typeof mldABI, 'MINT_PRICE', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof mldAddress } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractRead({
    abi: mldABI,
    address: mldAddress[chainId as keyof typeof mldAddress],
    functionName: 'MINT_PRICE',
    ...config,
  } as UseContractReadConfig<typeof mldABI, 'MINT_PRICE', TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link mldABI}__ and `functionName` set to `"balanceOf"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x924F2a4D3e93cC595792292C84A41Ad3AEd70E95)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xe0c8D341bF2024F8f331aE1c78E66aE823D85f01)
 */
export function useMldBalanceOf<
  TSelectData = ReadContractResult<typeof mldABI, 'balanceOf'>,
>(
  config: Omit<
    UseContractReadConfig<typeof mldABI, 'balanceOf', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof mldAddress } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractRead({
    abi: mldABI,
    address: mldAddress[chainId as keyof typeof mldAddress],
    functionName: 'balanceOf',
    ...config,
  } as UseContractReadConfig<typeof mldABI, 'balanceOf', TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link mldABI}__ and `functionName` set to `"claimed"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x924F2a4D3e93cC595792292C84A41Ad3AEd70E95)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xe0c8D341bF2024F8f331aE1c78E66aE823D85f01)
 */
export function useMldClaimed<
  TSelectData = ReadContractResult<typeof mldABI, 'claimed'>,
>(
  config: Omit<
    UseContractReadConfig<typeof mldABI, 'claimed', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof mldAddress } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractRead({
    abi: mldABI,
    address: mldAddress[chainId as keyof typeof mldAddress],
    functionName: 'claimed',
    ...config,
  } as UseContractReadConfig<typeof mldABI, 'claimed', TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link mldABI}__ and `functionName` set to `"currentPhase"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x924F2a4D3e93cC595792292C84A41Ad3AEd70E95)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xe0c8D341bF2024F8f331aE1c78E66aE823D85f01)
 */
export function useMldCurrentPhase<
  TSelectData = ReadContractResult<typeof mldABI, 'currentPhase'>,
>(
  config: Omit<
    UseContractReadConfig<typeof mldABI, 'currentPhase', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof mldAddress } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractRead({
    abi: mldABI,
    address: mldAddress[chainId as keyof typeof mldAddress],
    functionName: 'currentPhase',
    ...config,
  } as UseContractReadConfig<typeof mldABI, 'currentPhase', TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link mldABI}__ and `functionName` set to `"getApproved"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x924F2a4D3e93cC595792292C84A41Ad3AEd70E95)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xe0c8D341bF2024F8f331aE1c78E66aE823D85f01)
 */
export function useMldGetApproved<
  TSelectData = ReadContractResult<typeof mldABI, 'getApproved'>,
>(
  config: Omit<
    UseContractReadConfig<typeof mldABI, 'getApproved', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof mldAddress } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractRead({
    abi: mldABI,
    address: mldAddress[chainId as keyof typeof mldAddress],
    functionName: 'getApproved',
    ...config,
  } as UseContractReadConfig<typeof mldABI, 'getApproved', TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link mldABI}__ and `functionName` set to `"isApprovedForAll"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x924F2a4D3e93cC595792292C84A41Ad3AEd70E95)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xe0c8D341bF2024F8f331aE1c78E66aE823D85f01)
 */
export function useMldIsApprovedForAll<
  TSelectData = ReadContractResult<typeof mldABI, 'isApprovedForAll'>,
>(
  config: Omit<
    UseContractReadConfig<typeof mldABI, 'isApprovedForAll', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof mldAddress } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractRead({
    abi: mldABI,
    address: mldAddress[chainId as keyof typeof mldAddress],
    functionName: 'isApprovedForAll',
    ...config,
  } as UseContractReadConfig<typeof mldABI, 'isApprovedForAll', TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link mldABI}__ and `functionName` set to `"mintedPerWallet"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x924F2a4D3e93cC595792292C84A41Ad3AEd70E95)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xe0c8D341bF2024F8f331aE1c78E66aE823D85f01)
 */
export function useMldMintedPerWallet<
  TSelectData = ReadContractResult<typeof mldABI, 'mintedPerWallet'>,
>(
  config: Omit<
    UseContractReadConfig<typeof mldABI, 'mintedPerWallet', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof mldAddress } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractRead({
    abi: mldABI,
    address: mldAddress[chainId as keyof typeof mldAddress],
    functionName: 'mintedPerWallet',
    ...config,
  } as UseContractReadConfig<typeof mldABI, 'mintedPerWallet', TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link mldABI}__ and `functionName` set to `"name"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x924F2a4D3e93cC595792292C84A41Ad3AEd70E95)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xe0c8D341bF2024F8f331aE1c78E66aE823D85f01)
 */
export function useMldName<
  TSelectData = ReadContractResult<typeof mldABI, 'name'>,
>(
  config: Omit<
    UseContractReadConfig<typeof mldABI, 'name', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof mldAddress } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractRead({
    abi: mldABI,
    address: mldAddress[chainId as keyof typeof mldAddress],
    functionName: 'name',
    ...config,
  } as UseContractReadConfig<typeof mldABI, 'name', TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link mldABI}__ and `functionName` set to `"owner"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x924F2a4D3e93cC595792292C84A41Ad3AEd70E95)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xe0c8D341bF2024F8f331aE1c78E66aE823D85f01)
 */
export function useMldOwner<
  TSelectData = ReadContractResult<typeof mldABI, 'owner'>,
>(
  config: Omit<
    UseContractReadConfig<typeof mldABI, 'owner', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof mldAddress } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractRead({
    abi: mldABI,
    address: mldAddress[chainId as keyof typeof mldAddress],
    functionName: 'owner',
    ...config,
  } as UseContractReadConfig<typeof mldABI, 'owner', TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link mldABI}__ and `functionName` set to `"ownerOf"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x924F2a4D3e93cC595792292C84A41Ad3AEd70E95)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xe0c8D341bF2024F8f331aE1c78E66aE823D85f01)
 */
export function useMldOwnerOf<
  TSelectData = ReadContractResult<typeof mldABI, 'ownerOf'>,
>(
  config: Omit<
    UseContractReadConfig<typeof mldABI, 'ownerOf', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof mldAddress } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractRead({
    abi: mldABI,
    address: mldAddress[chainId as keyof typeof mldAddress],
    functionName: 'ownerOf',
    ...config,
  } as UseContractReadConfig<typeof mldABI, 'ownerOf', TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link mldABI}__ and `functionName` set to `"paused"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x924F2a4D3e93cC595792292C84A41Ad3AEd70E95)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xe0c8D341bF2024F8f331aE1c78E66aE823D85f01)
 */
export function useMldPaused<
  TSelectData = ReadContractResult<typeof mldABI, 'paused'>,
>(
  config: Omit<
    UseContractReadConfig<typeof mldABI, 'paused', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof mldAddress } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractRead({
    abi: mldABI,
    address: mldAddress[chainId as keyof typeof mldAddress],
    functionName: 'paused',
    ...config,
  } as UseContractReadConfig<typeof mldABI, 'paused', TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link mldABI}__ and `functionName` set to `"royaltyInfo"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x924F2a4D3e93cC595792292C84A41Ad3AEd70E95)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xe0c8D341bF2024F8f331aE1c78E66aE823D85f01)
 */
export function useMldRoyaltyInfo<
  TSelectData = ReadContractResult<typeof mldABI, 'royaltyInfo'>,
>(
  config: Omit<
    UseContractReadConfig<typeof mldABI, 'royaltyInfo', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof mldAddress } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractRead({
    abi: mldABI,
    address: mldAddress[chainId as keyof typeof mldAddress],
    functionName: 'royaltyInfo',
    ...config,
  } as UseContractReadConfig<typeof mldABI, 'royaltyInfo', TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link mldABI}__ and `functionName` set to `"supportsInterface"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x924F2a4D3e93cC595792292C84A41Ad3AEd70E95)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xe0c8D341bF2024F8f331aE1c78E66aE823D85f01)
 */
export function useMldSupportsInterface<
  TSelectData = ReadContractResult<typeof mldABI, 'supportsInterface'>,
>(
  config: Omit<
    UseContractReadConfig<typeof mldABI, 'supportsInterface', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof mldAddress } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractRead({
    abi: mldABI,
    address: mldAddress[chainId as keyof typeof mldAddress],
    functionName: 'supportsInterface',
    ...config,
  } as UseContractReadConfig<typeof mldABI, 'supportsInterface', TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link mldABI}__ and `functionName` set to `"symbol"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x924F2a4D3e93cC595792292C84A41Ad3AEd70E95)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xe0c8D341bF2024F8f331aE1c78E66aE823D85f01)
 */
export function useMldSymbol<
  TSelectData = ReadContractResult<typeof mldABI, 'symbol'>,
>(
  config: Omit<
    UseContractReadConfig<typeof mldABI, 'symbol', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof mldAddress } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractRead({
    abi: mldABI,
    address: mldAddress[chainId as keyof typeof mldAddress],
    functionName: 'symbol',
    ...config,
  } as UseContractReadConfig<typeof mldABI, 'symbol', TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link mldABI}__ and `functionName` set to `"tokenURI"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x924F2a4D3e93cC595792292C84A41Ad3AEd70E95)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xe0c8D341bF2024F8f331aE1c78E66aE823D85f01)
 */
export function useMldTokenUri<
  TSelectData = ReadContractResult<typeof mldABI, 'tokenURI'>,
>(
  config: Omit<
    UseContractReadConfig<typeof mldABI, 'tokenURI', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof mldAddress } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractRead({
    abi: mldABI,
    address: mldAddress[chainId as keyof typeof mldAddress],
    functionName: 'tokenURI',
    ...config,
  } as UseContractReadConfig<typeof mldABI, 'tokenURI', TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link mldABI}__ and `functionName` set to `"totalSupply"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x924F2a4D3e93cC595792292C84A41Ad3AEd70E95)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xe0c8D341bF2024F8f331aE1c78E66aE823D85f01)
 */
export function useMldTotalSupply<
  TSelectData = ReadContractResult<typeof mldABI, 'totalSupply'>,
>(
  config: Omit<
    UseContractReadConfig<typeof mldABI, 'totalSupply', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof mldAddress } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractRead({
    abi: mldABI,
    address: mldAddress[chainId as keyof typeof mldAddress],
    functionName: 'totalSupply',
    ...config,
  } as UseContractReadConfig<typeof mldABI, 'totalSupply', TSelectData>);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link mldABI}__.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x924F2a4D3e93cC595792292C84A41Ad3AEd70E95)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xe0c8D341bF2024F8f331aE1c78E66aE823D85f01)
 */
export function useMldWrite<
  TMode extends WriteContractMode,
  TFunctionName extends string,
  TChainId extends number = keyof typeof mldAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof mldABI, string>['abi'],
        TFunctionName
      > & { address?: Address; chainId?: TChainId }
    : UseContractWriteConfig<TMode, typeof mldABI, TFunctionName> & {
        abi?: never;
        address?: never;
        chainId?: TChainId;
      } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractWrite<TMode, typeof mldABI, TFunctionName>({
    abi: mldABI,
    address: mldAddress[chainId as keyof typeof mldAddress],
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link mldABI}__ and `functionName` set to `"approve"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x924F2a4D3e93cC595792292C84A41Ad3AEd70E95)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xe0c8D341bF2024F8f331aE1c78E66aE823D85f01)
 */
export function useMldApprove<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof mldAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof mldABI, 'approve'>['abi'],
        'approve'
      > & { address?: Address; chainId?: TChainId; functionName?: 'approve' }
    : UseContractWriteConfig<TMode, typeof mldABI, 'approve'> & {
        abi?: never;
        address?: never;
        chainId?: TChainId;
        functionName?: 'approve';
      } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractWrite<TMode, typeof mldABI, 'approve'>({
    abi: mldABI,
    address: mldAddress[chainId as keyof typeof mldAddress],
    functionName: 'approve',
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link mldABI}__ and `functionName` set to `"burn"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x924F2a4D3e93cC595792292C84A41Ad3AEd70E95)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xe0c8D341bF2024F8f331aE1c78E66aE823D85f01)
 */
export function useMldBurn<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof mldAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof mldABI, 'burn'>['abi'],
        'burn'
      > & { address?: Address; chainId?: TChainId; functionName?: 'burn' }
    : UseContractWriteConfig<TMode, typeof mldABI, 'burn'> & {
        abi?: never;
        address?: never;
        chainId?: TChainId;
        functionName?: 'burn';
      } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractWrite<TMode, typeof mldABI, 'burn'>({
    abi: mldABI,
    address: mldAddress[chainId as keyof typeof mldAddress],
    functionName: 'burn',
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link mldABI}__ and `functionName` set to `"discountMint"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x924F2a4D3e93cC595792292C84A41Ad3AEd70E95)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xe0c8D341bF2024F8f331aE1c78E66aE823D85f01)
 */
export function useMldDiscountMint<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof mldAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof mldABI, 'discountMint'>['abi'],
        'discountMint'
      > & {
        address?: Address;
        chainId?: TChainId;
        functionName?: 'discountMint';
      }
    : UseContractWriteConfig<TMode, typeof mldABI, 'discountMint'> & {
        abi?: never;
        address?: never;
        chainId?: TChainId;
        functionName?: 'discountMint';
      } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractWrite<TMode, typeof mldABI, 'discountMint'>({
    abi: mldABI,
    address: mldAddress[chainId as keyof typeof mldAddress],
    functionName: 'discountMint',
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link mldABI}__ and `functionName` set to `"ownerMint"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x924F2a4D3e93cC595792292C84A41Ad3AEd70E95)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xe0c8D341bF2024F8f331aE1c78E66aE823D85f01)
 */
export function useMldOwnerMint<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof mldAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof mldABI, 'ownerMint'>['abi'],
        'ownerMint'
      > & { address?: Address; chainId?: TChainId; functionName?: 'ownerMint' }
    : UseContractWriteConfig<TMode, typeof mldABI, 'ownerMint'> & {
        abi?: never;
        address?: never;
        chainId?: TChainId;
        functionName?: 'ownerMint';
      } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractWrite<TMode, typeof mldABI, 'ownerMint'>({
    abi: mldABI,
    address: mldAddress[chainId as keyof typeof mldAddress],
    functionName: 'ownerMint',
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link mldABI}__ and `functionName` set to `"pause"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x924F2a4D3e93cC595792292C84A41Ad3AEd70E95)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xe0c8D341bF2024F8f331aE1c78E66aE823D85f01)
 */
export function useMldPause<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof mldAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof mldABI, 'pause'>['abi'],
        'pause'
      > & { address?: Address; chainId?: TChainId; functionName?: 'pause' }
    : UseContractWriteConfig<TMode, typeof mldABI, 'pause'> & {
        abi?: never;
        address?: never;
        chainId?: TChainId;
        functionName?: 'pause';
      } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractWrite<TMode, typeof mldABI, 'pause'>({
    abi: mldABI,
    address: mldAddress[chainId as keyof typeof mldAddress],
    functionName: 'pause',
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link mldABI}__ and `functionName` set to `"publicMint"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x924F2a4D3e93cC595792292C84A41Ad3AEd70E95)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xe0c8D341bF2024F8f331aE1c78E66aE823D85f01)
 */
export function useMldPublicMint<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof mldAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof mldABI, 'publicMint'>['abi'],
        'publicMint'
      > & { address?: Address; chainId?: TChainId; functionName?: 'publicMint' }
    : UseContractWriteConfig<TMode, typeof mldABI, 'publicMint'> & {
        abi?: never;
        address?: never;
        chainId?: TChainId;
        functionName?: 'publicMint';
      } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractWrite<TMode, typeof mldABI, 'publicMint'>({
    abi: mldABI,
    address: mldAddress[chainId as keyof typeof mldAddress],
    functionName: 'publicMint',
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link mldABI}__ and `functionName` set to `"renounceOwnership"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x924F2a4D3e93cC595792292C84A41Ad3AEd70E95)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xe0c8D341bF2024F8f331aE1c78E66aE823D85f01)
 */
export function useMldRenounceOwnership<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof mldAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof mldABI, 'renounceOwnership'>['abi'],
        'renounceOwnership'
      > & {
        address?: Address;
        chainId?: TChainId;
        functionName?: 'renounceOwnership';
      }
    : UseContractWriteConfig<TMode, typeof mldABI, 'renounceOwnership'> & {
        abi?: never;
        address?: never;
        chainId?: TChainId;
        functionName?: 'renounceOwnership';
      } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractWrite<TMode, typeof mldABI, 'renounceOwnership'>({
    abi: mldABI,
    address: mldAddress[chainId as keyof typeof mldAddress],
    functionName: 'renounceOwnership',
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link mldABI}__ and `functionName` set to `"safeTransferFrom"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x924F2a4D3e93cC595792292C84A41Ad3AEd70E95)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xe0c8D341bF2024F8f331aE1c78E66aE823D85f01)
 */
export function useMldSafeTransferFrom<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof mldAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof mldABI, 'safeTransferFrom'>['abi'],
        'safeTransferFrom'
      > & {
        address?: Address;
        chainId?: TChainId;
        functionName?: 'safeTransferFrom';
      }
    : UseContractWriteConfig<TMode, typeof mldABI, 'safeTransferFrom'> & {
        abi?: never;
        address?: never;
        chainId?: TChainId;
        functionName?: 'safeTransferFrom';
      } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractWrite<TMode, typeof mldABI, 'safeTransferFrom'>({
    abi: mldABI,
    address: mldAddress[chainId as keyof typeof mldAddress],
    functionName: 'safeTransferFrom',
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link mldABI}__ and `functionName` set to `"setApprovalForAll"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x924F2a4D3e93cC595792292C84A41Ad3AEd70E95)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xe0c8D341bF2024F8f331aE1c78E66aE823D85f01)
 */
export function useMldSetApprovalForAll<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof mldAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof mldABI, 'setApprovalForAll'>['abi'],
        'setApprovalForAll'
      > & {
        address?: Address;
        chainId?: TChainId;
        functionName?: 'setApprovalForAll';
      }
    : UseContractWriteConfig<TMode, typeof mldABI, 'setApprovalForAll'> & {
        abi?: never;
        address?: never;
        chainId?: TChainId;
        functionName?: 'setApprovalForAll';
      } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractWrite<TMode, typeof mldABI, 'setApprovalForAll'>({
    abi: mldABI,
    address: mldAddress[chainId as keyof typeof mldAddress],
    functionName: 'setApprovalForAll',
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link mldABI}__ and `functionName` set to `"setBaseURI"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x924F2a4D3e93cC595792292C84A41Ad3AEd70E95)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xe0c8D341bF2024F8f331aE1c78E66aE823D85f01)
 */
export function useMldSetBaseUri<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof mldAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof mldABI, 'setBaseURI'>['abi'],
        'setBaseURI'
      > & { address?: Address; chainId?: TChainId; functionName?: 'setBaseURI' }
    : UseContractWriteConfig<TMode, typeof mldABI, 'setBaseURI'> & {
        abi?: never;
        address?: never;
        chainId?: TChainId;
        functionName?: 'setBaseURI';
      } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractWrite<TMode, typeof mldABI, 'setBaseURI'>({
    abi: mldABI,
    address: mldAddress[chainId as keyof typeof mldAddress],
    functionName: 'setBaseURI',
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link mldABI}__ and `functionName` set to `"setDiscountMintPrice"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x924F2a4D3e93cC595792292C84A41Ad3AEd70E95)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xe0c8D341bF2024F8f331aE1c78E66aE823D85f01)
 */
export function useMldSetDiscountMintPrice<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof mldAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof mldABI,
          'setDiscountMintPrice'
        >['abi'],
        'setDiscountMintPrice'
      > & {
        address?: Address;
        chainId?: TChainId;
        functionName?: 'setDiscountMintPrice';
      }
    : UseContractWriteConfig<TMode, typeof mldABI, 'setDiscountMintPrice'> & {
        abi?: never;
        address?: never;
        chainId?: TChainId;
        functionName?: 'setDiscountMintPrice';
      } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractWrite<TMode, typeof mldABI, 'setDiscountMintPrice'>({
    abi: mldABI,
    address: mldAddress[chainId as keyof typeof mldAddress],
    functionName: 'setDiscountMintPrice',
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link mldABI}__ and `functionName` set to `"setMaxPurchaseCount"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x924F2a4D3e93cC595792292C84A41Ad3AEd70E95)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xe0c8D341bF2024F8f331aE1c78E66aE823D85f01)
 */
export function useMldSetMaxPurchaseCount<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof mldAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof mldABI, 'setMaxPurchaseCount'>['abi'],
        'setMaxPurchaseCount'
      > & {
        address?: Address;
        chainId?: TChainId;
        functionName?: 'setMaxPurchaseCount';
      }
    : UseContractWriteConfig<TMode, typeof mldABI, 'setMaxPurchaseCount'> & {
        abi?: never;
        address?: never;
        chainId?: TChainId;
        functionName?: 'setMaxPurchaseCount';
      } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractWrite<TMode, typeof mldABI, 'setMaxPurchaseCount'>({
    abi: mldABI,
    address: mldAddress[chainId as keyof typeof mldAddress],
    functionName: 'setMaxPurchaseCount',
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link mldABI}__ and `functionName` set to `"setMerkleRoot"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x924F2a4D3e93cC595792292C84A41Ad3AEd70E95)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xe0c8D341bF2024F8f331aE1c78E66aE823D85f01)
 */
export function useMldSetMerkleRoot<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof mldAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof mldABI, 'setMerkleRoot'>['abi'],
        'setMerkleRoot'
      > & {
        address?: Address;
        chainId?: TChainId;
        functionName?: 'setMerkleRoot';
      }
    : UseContractWriteConfig<TMode, typeof mldABI, 'setMerkleRoot'> & {
        abi?: never;
        address?: never;
        chainId?: TChainId;
        functionName?: 'setMerkleRoot';
      } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractWrite<TMode, typeof mldABI, 'setMerkleRoot'>({
    abi: mldABI,
    address: mldAddress[chainId as keyof typeof mldAddress],
    functionName: 'setMerkleRoot',
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link mldABI}__ and `functionName` set to `"setMintPhase"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x924F2a4D3e93cC595792292C84A41Ad3AEd70E95)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xe0c8D341bF2024F8f331aE1c78E66aE823D85f01)
 */
export function useMldSetMintPhase<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof mldAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof mldABI, 'setMintPhase'>['abi'],
        'setMintPhase'
      > & {
        address?: Address;
        chainId?: TChainId;
        functionName?: 'setMintPhase';
      }
    : UseContractWriteConfig<TMode, typeof mldABI, 'setMintPhase'> & {
        abi?: never;
        address?: never;
        chainId?: TChainId;
        functionName?: 'setMintPhase';
      } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractWrite<TMode, typeof mldABI, 'setMintPhase'>({
    abi: mldABI,
    address: mldAddress[chainId as keyof typeof mldAddress],
    functionName: 'setMintPhase',
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link mldABI}__ and `functionName` set to `"setPublicMintPrice"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x924F2a4D3e93cC595792292C84A41Ad3AEd70E95)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xe0c8D341bF2024F8f331aE1c78E66aE823D85f01)
 */
export function useMldSetPublicMintPrice<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof mldAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof mldABI, 'setPublicMintPrice'>['abi'],
        'setPublicMintPrice'
      > & {
        address?: Address;
        chainId?: TChainId;
        functionName?: 'setPublicMintPrice';
      }
    : UseContractWriteConfig<TMode, typeof mldABI, 'setPublicMintPrice'> & {
        abi?: never;
        address?: never;
        chainId?: TChainId;
        functionName?: 'setPublicMintPrice';
      } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractWrite<TMode, typeof mldABI, 'setPublicMintPrice'>({
    abi: mldABI,
    address: mldAddress[chainId as keyof typeof mldAddress],
    functionName: 'setPublicMintPrice',
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link mldABI}__ and `functionName` set to `"transferFrom"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x924F2a4D3e93cC595792292C84A41Ad3AEd70E95)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xe0c8D341bF2024F8f331aE1c78E66aE823D85f01)
 */
export function useMldTransferFrom<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof mldAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof mldABI, 'transferFrom'>['abi'],
        'transferFrom'
      > & {
        address?: Address;
        chainId?: TChainId;
        functionName?: 'transferFrom';
      }
    : UseContractWriteConfig<TMode, typeof mldABI, 'transferFrom'> & {
        abi?: never;
        address?: never;
        chainId?: TChainId;
        functionName?: 'transferFrom';
      } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractWrite<TMode, typeof mldABI, 'transferFrom'>({
    abi: mldABI,
    address: mldAddress[chainId as keyof typeof mldAddress],
    functionName: 'transferFrom',
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link mldABI}__ and `functionName` set to `"transferOwnership"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x924F2a4D3e93cC595792292C84A41Ad3AEd70E95)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xe0c8D341bF2024F8f331aE1c78E66aE823D85f01)
 */
export function useMldTransferOwnership<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof mldAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof mldABI, 'transferOwnership'>['abi'],
        'transferOwnership'
      > & {
        address?: Address;
        chainId?: TChainId;
        functionName?: 'transferOwnership';
      }
    : UseContractWriteConfig<TMode, typeof mldABI, 'transferOwnership'> & {
        abi?: never;
        address?: never;
        chainId?: TChainId;
        functionName?: 'transferOwnership';
      } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractWrite<TMode, typeof mldABI, 'transferOwnership'>({
    abi: mldABI,
    address: mldAddress[chainId as keyof typeof mldAddress],
    functionName: 'transferOwnership',
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link mldABI}__ and `functionName` set to `"unpause"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x924F2a4D3e93cC595792292C84A41Ad3AEd70E95)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xe0c8D341bF2024F8f331aE1c78E66aE823D85f01)
 */
export function useMldUnpause<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof mldAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof mldABI, 'unpause'>['abi'],
        'unpause'
      > & { address?: Address; chainId?: TChainId; functionName?: 'unpause' }
    : UseContractWriteConfig<TMode, typeof mldABI, 'unpause'> & {
        abi?: never;
        address?: never;
        chainId?: TChainId;
        functionName?: 'unpause';
      } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractWrite<TMode, typeof mldABI, 'unpause'>({
    abi: mldABI,
    address: mldAddress[chainId as keyof typeof mldAddress],
    functionName: 'unpause',
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link mldABI}__ and `functionName` set to `"withdraw"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x924F2a4D3e93cC595792292C84A41Ad3AEd70E95)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xe0c8D341bF2024F8f331aE1c78E66aE823D85f01)
 */
export function useMldWithdraw<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof mldAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof mldABI, 'withdraw'>['abi'],
        'withdraw'
      > & { address?: Address; chainId?: TChainId; functionName?: 'withdraw' }
    : UseContractWriteConfig<TMode, typeof mldABI, 'withdraw'> & {
        abi?: never;
        address?: never;
        chainId?: TChainId;
        functionName?: 'withdraw';
      } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractWrite<TMode, typeof mldABI, 'withdraw'>({
    abi: mldABI,
    address: mldAddress[chainId as keyof typeof mldAddress],
    functionName: 'withdraw',
    ...config,
  } as any);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link mldABI}__.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x924F2a4D3e93cC595792292C84A41Ad3AEd70E95)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xe0c8D341bF2024F8f331aE1c78E66aE823D85f01)
 */
export function usePrepareMldWrite<TFunctionName extends string>(
  config: Omit<
    UsePrepareContractWriteConfig<typeof mldABI, TFunctionName>,
    'abi' | 'address'
  > & { chainId?: keyof typeof mldAddress } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return usePrepareContractWrite({
    abi: mldABI,
    address: mldAddress[chainId as keyof typeof mldAddress],
    ...config,
  } as UsePrepareContractWriteConfig<typeof mldABI, TFunctionName>);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link mldABI}__ and `functionName` set to `"approve"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x924F2a4D3e93cC595792292C84A41Ad3AEd70E95)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xe0c8D341bF2024F8f331aE1c78E66aE823D85f01)
 */
export function usePrepareMldApprove(
  config: Omit<
    UsePrepareContractWriteConfig<typeof mldABI, 'approve'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof mldAddress } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return usePrepareContractWrite({
    abi: mldABI,
    address: mldAddress[chainId as keyof typeof mldAddress],
    functionName: 'approve',
    ...config,
  } as UsePrepareContractWriteConfig<typeof mldABI, 'approve'>);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link mldABI}__ and `functionName` set to `"burn"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x924F2a4D3e93cC595792292C84A41Ad3AEd70E95)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xe0c8D341bF2024F8f331aE1c78E66aE823D85f01)
 */
export function usePrepareMldBurn(
  config: Omit<
    UsePrepareContractWriteConfig<typeof mldABI, 'burn'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof mldAddress } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return usePrepareContractWrite({
    abi: mldABI,
    address: mldAddress[chainId as keyof typeof mldAddress],
    functionName: 'burn',
    ...config,
  } as UsePrepareContractWriteConfig<typeof mldABI, 'burn'>);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link mldABI}__ and `functionName` set to `"discountMint"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x924F2a4D3e93cC595792292C84A41Ad3AEd70E95)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xe0c8D341bF2024F8f331aE1c78E66aE823D85f01)
 */
export function usePrepareMldDiscountMint(
  config: Omit<
    UsePrepareContractWriteConfig<typeof mldABI, 'discountMint'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof mldAddress } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return usePrepareContractWrite({
    abi: mldABI,
    address: mldAddress[chainId as keyof typeof mldAddress],
    functionName: 'discountMint',
    ...config,
  } as UsePrepareContractWriteConfig<typeof mldABI, 'discountMint'>);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link mldABI}__ and `functionName` set to `"ownerMint"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x924F2a4D3e93cC595792292C84A41Ad3AEd70E95)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xe0c8D341bF2024F8f331aE1c78E66aE823D85f01)
 */
export function usePrepareMldOwnerMint(
  config: Omit<
    UsePrepareContractWriteConfig<typeof mldABI, 'ownerMint'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof mldAddress } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return usePrepareContractWrite({
    abi: mldABI,
    address: mldAddress[chainId as keyof typeof mldAddress],
    functionName: 'ownerMint',
    ...config,
  } as UsePrepareContractWriteConfig<typeof mldABI, 'ownerMint'>);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link mldABI}__ and `functionName` set to `"pause"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x924F2a4D3e93cC595792292C84A41Ad3AEd70E95)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xe0c8D341bF2024F8f331aE1c78E66aE823D85f01)
 */
export function usePrepareMldPause(
  config: Omit<
    UsePrepareContractWriteConfig<typeof mldABI, 'pause'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof mldAddress } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return usePrepareContractWrite({
    abi: mldABI,
    address: mldAddress[chainId as keyof typeof mldAddress],
    functionName: 'pause',
    ...config,
  } as UsePrepareContractWriteConfig<typeof mldABI, 'pause'>);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link mldABI}__ and `functionName` set to `"publicMint"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x924F2a4D3e93cC595792292C84A41Ad3AEd70E95)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xe0c8D341bF2024F8f331aE1c78E66aE823D85f01)
 */
export function usePrepareMldPublicMint(
  config: Omit<
    UsePrepareContractWriteConfig<typeof mldABI, 'publicMint'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof mldAddress } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return usePrepareContractWrite({
    abi: mldABI,
    address: mldAddress[chainId as keyof typeof mldAddress],
    functionName: 'publicMint',
    ...config,
  } as UsePrepareContractWriteConfig<typeof mldABI, 'publicMint'>);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link mldABI}__ and `functionName` set to `"renounceOwnership"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x924F2a4D3e93cC595792292C84A41Ad3AEd70E95)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xe0c8D341bF2024F8f331aE1c78E66aE823D85f01)
 */
export function usePrepareMldRenounceOwnership(
  config: Omit<
    UsePrepareContractWriteConfig<typeof mldABI, 'renounceOwnership'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof mldAddress } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return usePrepareContractWrite({
    abi: mldABI,
    address: mldAddress[chainId as keyof typeof mldAddress],
    functionName: 'renounceOwnership',
    ...config,
  } as UsePrepareContractWriteConfig<typeof mldABI, 'renounceOwnership'>);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link mldABI}__ and `functionName` set to `"safeTransferFrom"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x924F2a4D3e93cC595792292C84A41Ad3AEd70E95)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xe0c8D341bF2024F8f331aE1c78E66aE823D85f01)
 */
export function usePrepareMldSafeTransferFrom(
  config: Omit<
    UsePrepareContractWriteConfig<typeof mldABI, 'safeTransferFrom'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof mldAddress } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return usePrepareContractWrite({
    abi: mldABI,
    address: mldAddress[chainId as keyof typeof mldAddress],
    functionName: 'safeTransferFrom',
    ...config,
  } as UsePrepareContractWriteConfig<typeof mldABI, 'safeTransferFrom'>);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link mldABI}__ and `functionName` set to `"setApprovalForAll"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x924F2a4D3e93cC595792292C84A41Ad3AEd70E95)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xe0c8D341bF2024F8f331aE1c78E66aE823D85f01)
 */
export function usePrepareMldSetApprovalForAll(
  config: Omit<
    UsePrepareContractWriteConfig<typeof mldABI, 'setApprovalForAll'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof mldAddress } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return usePrepareContractWrite({
    abi: mldABI,
    address: mldAddress[chainId as keyof typeof mldAddress],
    functionName: 'setApprovalForAll',
    ...config,
  } as UsePrepareContractWriteConfig<typeof mldABI, 'setApprovalForAll'>);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link mldABI}__ and `functionName` set to `"setBaseURI"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x924F2a4D3e93cC595792292C84A41Ad3AEd70E95)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xe0c8D341bF2024F8f331aE1c78E66aE823D85f01)
 */
export function usePrepareMldSetBaseUri(
  config: Omit<
    UsePrepareContractWriteConfig<typeof mldABI, 'setBaseURI'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof mldAddress } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return usePrepareContractWrite({
    abi: mldABI,
    address: mldAddress[chainId as keyof typeof mldAddress],
    functionName: 'setBaseURI',
    ...config,
  } as UsePrepareContractWriteConfig<typeof mldABI, 'setBaseURI'>);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link mldABI}__ and `functionName` set to `"setDiscountMintPrice"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x924F2a4D3e93cC595792292C84A41Ad3AEd70E95)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xe0c8D341bF2024F8f331aE1c78E66aE823D85f01)
 */
export function usePrepareMldSetDiscountMintPrice(
  config: Omit<
    UsePrepareContractWriteConfig<typeof mldABI, 'setDiscountMintPrice'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof mldAddress } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return usePrepareContractWrite({
    abi: mldABI,
    address: mldAddress[chainId as keyof typeof mldAddress],
    functionName: 'setDiscountMintPrice',
    ...config,
  } as UsePrepareContractWriteConfig<typeof mldABI, 'setDiscountMintPrice'>);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link mldABI}__ and `functionName` set to `"setMaxPurchaseCount"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x924F2a4D3e93cC595792292C84A41Ad3AEd70E95)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xe0c8D341bF2024F8f331aE1c78E66aE823D85f01)
 */
export function usePrepareMldSetMaxPurchaseCount(
  config: Omit<
    UsePrepareContractWriteConfig<typeof mldABI, 'setMaxPurchaseCount'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof mldAddress } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return usePrepareContractWrite({
    abi: mldABI,
    address: mldAddress[chainId as keyof typeof mldAddress],
    functionName: 'setMaxPurchaseCount',
    ...config,
  } as UsePrepareContractWriteConfig<typeof mldABI, 'setMaxPurchaseCount'>);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link mldABI}__ and `functionName` set to `"setMerkleRoot"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x924F2a4D3e93cC595792292C84A41Ad3AEd70E95)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xe0c8D341bF2024F8f331aE1c78E66aE823D85f01)
 */
export function usePrepareMldSetMerkleRoot(
  config: Omit<
    UsePrepareContractWriteConfig<typeof mldABI, 'setMerkleRoot'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof mldAddress } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return usePrepareContractWrite({
    abi: mldABI,
    address: mldAddress[chainId as keyof typeof mldAddress],
    functionName: 'setMerkleRoot',
    ...config,
  } as UsePrepareContractWriteConfig<typeof mldABI, 'setMerkleRoot'>);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link mldABI}__ and `functionName` set to `"setMintPhase"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x924F2a4D3e93cC595792292C84A41Ad3AEd70E95)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xe0c8D341bF2024F8f331aE1c78E66aE823D85f01)
 */
export function usePrepareMldSetMintPhase(
  config: Omit<
    UsePrepareContractWriteConfig<typeof mldABI, 'setMintPhase'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof mldAddress } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return usePrepareContractWrite({
    abi: mldABI,
    address: mldAddress[chainId as keyof typeof mldAddress],
    functionName: 'setMintPhase',
    ...config,
  } as UsePrepareContractWriteConfig<typeof mldABI, 'setMintPhase'>);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link mldABI}__ and `functionName` set to `"setPublicMintPrice"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x924F2a4D3e93cC595792292C84A41Ad3AEd70E95)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xe0c8D341bF2024F8f331aE1c78E66aE823D85f01)
 */
export function usePrepareMldSetPublicMintPrice(
  config: Omit<
    UsePrepareContractWriteConfig<typeof mldABI, 'setPublicMintPrice'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof mldAddress } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return usePrepareContractWrite({
    abi: mldABI,
    address: mldAddress[chainId as keyof typeof mldAddress],
    functionName: 'setPublicMintPrice',
    ...config,
  } as UsePrepareContractWriteConfig<typeof mldABI, 'setPublicMintPrice'>);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link mldABI}__ and `functionName` set to `"transferFrom"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x924F2a4D3e93cC595792292C84A41Ad3AEd70E95)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xe0c8D341bF2024F8f331aE1c78E66aE823D85f01)
 */
export function usePrepareMldTransferFrom(
  config: Omit<
    UsePrepareContractWriteConfig<typeof mldABI, 'transferFrom'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof mldAddress } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return usePrepareContractWrite({
    abi: mldABI,
    address: mldAddress[chainId as keyof typeof mldAddress],
    functionName: 'transferFrom',
    ...config,
  } as UsePrepareContractWriteConfig<typeof mldABI, 'transferFrom'>);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link mldABI}__ and `functionName` set to `"transferOwnership"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x924F2a4D3e93cC595792292C84A41Ad3AEd70E95)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xe0c8D341bF2024F8f331aE1c78E66aE823D85f01)
 */
export function usePrepareMldTransferOwnership(
  config: Omit<
    UsePrepareContractWriteConfig<typeof mldABI, 'transferOwnership'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof mldAddress } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return usePrepareContractWrite({
    abi: mldABI,
    address: mldAddress[chainId as keyof typeof mldAddress],
    functionName: 'transferOwnership',
    ...config,
  } as UsePrepareContractWriteConfig<typeof mldABI, 'transferOwnership'>);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link mldABI}__ and `functionName` set to `"unpause"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x924F2a4D3e93cC595792292C84A41Ad3AEd70E95)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xe0c8D341bF2024F8f331aE1c78E66aE823D85f01)
 */
export function usePrepareMldUnpause(
  config: Omit<
    UsePrepareContractWriteConfig<typeof mldABI, 'unpause'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof mldAddress } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return usePrepareContractWrite({
    abi: mldABI,
    address: mldAddress[chainId as keyof typeof mldAddress],
    functionName: 'unpause',
    ...config,
  } as UsePrepareContractWriteConfig<typeof mldABI, 'unpause'>);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link mldABI}__ and `functionName` set to `"withdraw"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x924F2a4D3e93cC595792292C84A41Ad3AEd70E95)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xe0c8D341bF2024F8f331aE1c78E66aE823D85f01)
 */
export function usePrepareMldWithdraw(
  config: Omit<
    UsePrepareContractWriteConfig<typeof mldABI, 'withdraw'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof mldAddress } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return usePrepareContractWrite({
    abi: mldABI,
    address: mldAddress[chainId as keyof typeof mldAddress],
    functionName: 'withdraw',
    ...config,
  } as UsePrepareContractWriteConfig<typeof mldABI, 'withdraw'>);
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link mldABI}__.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x924F2a4D3e93cC595792292C84A41Ad3AEd70E95)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xe0c8D341bF2024F8f331aE1c78E66aE823D85f01)
 */
export function useMldEvent<TEventName extends string>(
  config: Omit<
    UseContractEventConfig<typeof mldABI, TEventName>,
    'abi' | 'address'
  > & { chainId?: keyof typeof mldAddress } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractEvent({
    abi: mldABI,
    address: mldAddress[chainId as keyof typeof mldAddress],
    ...config,
  } as UseContractEventConfig<typeof mldABI, TEventName>);
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link mldABI}__ and `eventName` set to `"Approval"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x924F2a4D3e93cC595792292C84A41Ad3AEd70E95)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xe0c8D341bF2024F8f331aE1c78E66aE823D85f01)
 */
export function useMldApprovalEvent(
  config: Omit<
    UseContractEventConfig<typeof mldABI, 'Approval'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof mldAddress } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractEvent({
    abi: mldABI,
    address: mldAddress[chainId as keyof typeof mldAddress],
    eventName: 'Approval',
    ...config,
  } as UseContractEventConfig<typeof mldABI, 'Approval'>);
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link mldABI}__ and `eventName` set to `"ApprovalForAll"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x924F2a4D3e93cC595792292C84A41Ad3AEd70E95)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xe0c8D341bF2024F8f331aE1c78E66aE823D85f01)
 */
export function useMldApprovalForAllEvent(
  config: Omit<
    UseContractEventConfig<typeof mldABI, 'ApprovalForAll'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof mldAddress } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractEvent({
    abi: mldABI,
    address: mldAddress[chainId as keyof typeof mldAddress],
    eventName: 'ApprovalForAll',
    ...config,
  } as UseContractEventConfig<typeof mldABI, 'ApprovalForAll'>);
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link mldABI}__ and `eventName` set to `"ConsecutiveTransfer"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x924F2a4D3e93cC595792292C84A41Ad3AEd70E95)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xe0c8D341bF2024F8f331aE1c78E66aE823D85f01)
 */
export function useMldConsecutiveTransferEvent(
  config: Omit<
    UseContractEventConfig<typeof mldABI, 'ConsecutiveTransfer'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof mldAddress } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractEvent({
    abi: mldABI,
    address: mldAddress[chainId as keyof typeof mldAddress],
    eventName: 'ConsecutiveTransfer',
    ...config,
  } as UseContractEventConfig<typeof mldABI, 'ConsecutiveTransfer'>);
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link mldABI}__ and `eventName` set to `"OwnershipTransferred"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x924F2a4D3e93cC595792292C84A41Ad3AEd70E95)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xe0c8D341bF2024F8f331aE1c78E66aE823D85f01)
 */
export function useMldOwnershipTransferredEvent(
  config: Omit<
    UseContractEventConfig<typeof mldABI, 'OwnershipTransferred'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof mldAddress } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractEvent({
    abi: mldABI,
    address: mldAddress[chainId as keyof typeof mldAddress],
    eventName: 'OwnershipTransferred',
    ...config,
  } as UseContractEventConfig<typeof mldABI, 'OwnershipTransferred'>);
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link mldABI}__ and `eventName` set to `"Paused"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x924F2a4D3e93cC595792292C84A41Ad3AEd70E95)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xe0c8D341bF2024F8f331aE1c78E66aE823D85f01)
 */
export function useMldPausedEvent(
  config: Omit<
    UseContractEventConfig<typeof mldABI, 'Paused'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof mldAddress } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractEvent({
    abi: mldABI,
    address: mldAddress[chainId as keyof typeof mldAddress],
    eventName: 'Paused',
    ...config,
  } as UseContractEventConfig<typeof mldABI, 'Paused'>);
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link mldABI}__ and `eventName` set to `"Transfer"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x924F2a4D3e93cC595792292C84A41Ad3AEd70E95)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xe0c8D341bF2024F8f331aE1c78E66aE823D85f01)
 */
export function useMldTransferEvent(
  config: Omit<
    UseContractEventConfig<typeof mldABI, 'Transfer'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof mldAddress } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractEvent({
    abi: mldABI,
    address: mldAddress[chainId as keyof typeof mldAddress],
    eventName: 'Transfer',
    ...config,
  } as UseContractEventConfig<typeof mldABI, 'Transfer'>);
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link mldABI}__ and `eventName` set to `"Unpaused"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x924F2a4D3e93cC595792292C84A41Ad3AEd70E95)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xe0c8D341bF2024F8f331aE1c78E66aE823D85f01)
 */
export function useMldUnpausedEvent(
  config: Omit<
    UseContractEventConfig<typeof mldABI, 'Unpaused'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof mldAddress } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractEvent({
    abi: mldABI,
    address: mldAddress[chainId as keyof typeof mldAddress],
    eventName: 'Unpaused',
    ...config,
  } as UseContractEventConfig<typeof mldABI, 'Unpaused'>);
}

/**
 * Wraps __{@link useContract}__ with `abi` set to __{@link storeFrontABI}__.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51AEe8Cb4512FF12551e0A598B8f45eb610550bE)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x35f7C5D0e916B9650DA1e47006FEf59cdCD4B452)
 */
export function useStoreFront(
  config: Omit<UseContractConfig, 'abi' | 'address'> & {
    chainId?: keyof typeof storeFrontAddress;
  } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContract({
    abi: storeFrontABI,
    address: storeFrontAddress[chainId as keyof typeof storeFrontAddress],
    ...config,
  });
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link storeFrontABI}__.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51AEe8Cb4512FF12551e0A598B8f45eb610550bE)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x35f7C5D0e916B9650DA1e47006FEf59cdCD4B452)
 */
export function useStoreFrontRead<
  TFunctionName extends string,
  TSelectData = ReadContractResult<typeof storeFrontABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof storeFrontABI, TFunctionName, TSelectData>,
    'abi' | 'address'
  > & { chainId?: keyof typeof storeFrontAddress } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractRead({
    abi: storeFrontABI,
    address: storeFrontAddress[chainId as keyof typeof storeFrontAddress],
    ...config,
  } as UseContractReadConfig<typeof storeFrontABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link storeFrontABI}__ and `functionName` set to `"ADMIN_ROLE"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51AEe8Cb4512FF12551e0A598B8f45eb610550bE)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x35f7C5D0e916B9650DA1e47006FEf59cdCD4B452)
 */
export function useStoreFrontAdminRole<
  TSelectData = ReadContractResult<typeof storeFrontABI, 'ADMIN_ROLE'>,
>(
  config: Omit<
    UseContractReadConfig<typeof storeFrontABI, 'ADMIN_ROLE', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof storeFrontAddress } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractRead({
    abi: storeFrontABI,
    address: storeFrontAddress[chainId as keyof typeof storeFrontAddress],
    functionName: 'ADMIN_ROLE',
    ...config,
  } as UseContractReadConfig<typeof storeFrontABI, 'ADMIN_ROLE', TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link storeFrontABI}__ and `functionName` set to `"DEFAULT_ADMIN_ROLE"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51AEe8Cb4512FF12551e0A598B8f45eb610550bE)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x35f7C5D0e916B9650DA1e47006FEf59cdCD4B452)
 */
export function useStoreFrontDefaultAdminRole<
  TSelectData = ReadContractResult<typeof storeFrontABI, 'DEFAULT_ADMIN_ROLE'>,
>(
  config: Omit<
    UseContractReadConfig<
      typeof storeFrontABI,
      'DEFAULT_ADMIN_ROLE',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof storeFrontAddress } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractRead({
    abi: storeFrontABI,
    address: storeFrontAddress[chainId as keyof typeof storeFrontAddress],
    functionName: 'DEFAULT_ADMIN_ROLE',
    ...config,
  } as UseContractReadConfig<
    typeof storeFrontABI,
    'DEFAULT_ADMIN_ROLE',
    TSelectData
  >);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link storeFrontABI}__ and `functionName` set to `"claimed"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51AEe8Cb4512FF12551e0A598B8f45eb610550bE)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x35f7C5D0e916B9650DA1e47006FEf59cdCD4B452)
 */
export function useStoreFrontClaimed<
  TSelectData = ReadContractResult<typeof storeFrontABI, 'claimed'>,
>(
  config: Omit<
    UseContractReadConfig<typeof storeFrontABI, 'claimed', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof storeFrontAddress } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractRead({
    abi: storeFrontABI,
    address: storeFrontAddress[chainId as keyof typeof storeFrontAddress],
    functionName: 'claimed',
    ...config,
  } as UseContractReadConfig<typeof storeFrontABI, 'claimed', TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link storeFrontABI}__ and `functionName` set to `"currentEdition"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51AEe8Cb4512FF12551e0A598B8f45eb610550bE)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x35f7C5D0e916B9650DA1e47006FEf59cdCD4B452)
 */
export function useStoreFrontCurrentEdition<
  TSelectData = ReadContractResult<typeof storeFrontABI, 'currentEdition'>,
>(
  config: Omit<
    UseContractReadConfig<typeof storeFrontABI, 'currentEdition', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof storeFrontAddress } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractRead({
    abi: storeFrontABI,
    address: storeFrontAddress[chainId as keyof typeof storeFrontAddress],
    functionName: 'currentEdition',
    ...config,
  } as UseContractReadConfig<
    typeof storeFrontABI,
    'currentEdition',
    TSelectData
  >);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link storeFrontABI}__ and `functionName` set to `"getRoleAdmin"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51AEe8Cb4512FF12551e0A598B8f45eb610550bE)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x35f7C5D0e916B9650DA1e47006FEf59cdCD4B452)
 */
export function useStoreFrontGetRoleAdmin<
  TSelectData = ReadContractResult<typeof storeFrontABI, 'getRoleAdmin'>,
>(
  config: Omit<
    UseContractReadConfig<typeof storeFrontABI, 'getRoleAdmin', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof storeFrontAddress } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractRead({
    abi: storeFrontABI,
    address: storeFrontAddress[chainId as keyof typeof storeFrontAddress],
    functionName: 'getRoleAdmin',
    ...config,
  } as UseContractReadConfig<
    typeof storeFrontABI,
    'getRoleAdmin',
    TSelectData
  >);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link storeFrontABI}__ and `functionName` set to `"hasRole"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51AEe8Cb4512FF12551e0A598B8f45eb610550bE)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x35f7C5D0e916B9650DA1e47006FEf59cdCD4B452)
 */
export function useStoreFrontHasRole<
  TSelectData = ReadContractResult<typeof storeFrontABI, 'hasRole'>,
>(
  config: Omit<
    UseContractReadConfig<typeof storeFrontABI, 'hasRole', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof storeFrontAddress } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractRead({
    abi: storeFrontABI,
    address: storeFrontAddress[chainId as keyof typeof storeFrontAddress],
    functionName: 'hasRole',
    ...config,
  } as UseContractReadConfig<typeof storeFrontABI, 'hasRole', TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link storeFrontABI}__ and `functionName` set to `"isMintOpen"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51AEe8Cb4512FF12551e0A598B8f45eb610550bE)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x35f7C5D0e916B9650DA1e47006FEf59cdCD4B452)
 */
export function useStoreFrontIsMintOpen<
  TSelectData = ReadContractResult<typeof storeFrontABI, 'isMintOpen'>,
>(
  config: Omit<
    UseContractReadConfig<typeof storeFrontABI, 'isMintOpen', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof storeFrontAddress } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractRead({
    abi: storeFrontABI,
    address: storeFrontAddress[chainId as keyof typeof storeFrontAddress],
    functionName: 'isMintOpen',
    ...config,
  } as UseContractReadConfig<typeof storeFrontABI, 'isMintOpen', TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link storeFrontABI}__ and `functionName` set to `"mintEnd"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51AEe8Cb4512FF12551e0A598B8f45eb610550bE)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x35f7C5D0e916B9650DA1e47006FEf59cdCD4B452)
 */
export function useStoreFrontMintEnd<
  TSelectData = ReadContractResult<typeof storeFrontABI, 'mintEnd'>,
>(
  config: Omit<
    UseContractReadConfig<typeof storeFrontABI, 'mintEnd', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof storeFrontAddress } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractRead({
    abi: storeFrontABI,
    address: storeFrontAddress[chainId as keyof typeof storeFrontAddress],
    functionName: 'mintEnd',
    ...config,
  } as UseContractReadConfig<typeof storeFrontABI, 'mintEnd', TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link storeFrontABI}__ and `functionName` set to `"mintPerMld"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51AEe8Cb4512FF12551e0A598B8f45eb610550bE)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x35f7C5D0e916B9650DA1e47006FEf59cdCD4B452)
 */
export function useStoreFrontMintPerMld<
  TSelectData = ReadContractResult<typeof storeFrontABI, 'mintPerMld'>,
>(
  config: Omit<
    UseContractReadConfig<typeof storeFrontABI, 'mintPerMld', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof storeFrontAddress } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractRead({
    abi: storeFrontABI,
    address: storeFrontAddress[chainId as keyof typeof storeFrontAddress],
    functionName: 'mintPerMld',
    ...config,
  } as UseContractReadConfig<typeof storeFrontABI, 'mintPerMld', TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link storeFrontABI}__ and `functionName` set to `"mintPrice"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51AEe8Cb4512FF12551e0A598B8f45eb610550bE)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x35f7C5D0e916B9650DA1e47006FEf59cdCD4B452)
 */
export function useStoreFrontMintPrice<
  TSelectData = ReadContractResult<typeof storeFrontABI, 'mintPrice'>,
>(
  config: Omit<
    UseContractReadConfig<typeof storeFrontABI, 'mintPrice', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof storeFrontAddress } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractRead({
    abi: storeFrontABI,
    address: storeFrontAddress[chainId as keyof typeof storeFrontAddress],
    functionName: 'mintPrice',
    ...config,
  } as UseContractReadConfig<typeof storeFrontABI, 'mintPrice', TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link storeFrontABI}__ and `functionName` set to `"mintStart"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51AEe8Cb4512FF12551e0A598B8f45eb610550bE)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x35f7C5D0e916B9650DA1e47006FEf59cdCD4B452)
 */
export function useStoreFrontMintStart<
  TSelectData = ReadContractResult<typeof storeFrontABI, 'mintStart'>,
>(
  config: Omit<
    UseContractReadConfig<typeof storeFrontABI, 'mintStart', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof storeFrontAddress } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractRead({
    abi: storeFrontABI,
    address: storeFrontAddress[chainId as keyof typeof storeFrontAddress],
    functionName: 'mintStart',
    ...config,
  } as UseContractReadConfig<typeof storeFrontABI, 'mintStart', TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link storeFrontABI}__ and `functionName` set to `"paused"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51AEe8Cb4512FF12551e0A598B8f45eb610550bE)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x35f7C5D0e916B9650DA1e47006FEf59cdCD4B452)
 */
export function useStoreFrontPaused<
  TSelectData = ReadContractResult<typeof storeFrontABI, 'paused'>,
>(
  config: Omit<
    UseContractReadConfig<typeof storeFrontABI, 'paused', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof storeFrontAddress } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractRead({
    abi: storeFrontABI,
    address: storeFrontAddress[chainId as keyof typeof storeFrontAddress],
    functionName: 'paused',
    ...config,
  } as UseContractReadConfig<typeof storeFrontABI, 'paused', TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link storeFrontABI}__ and `functionName` set to `"payee"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51AEe8Cb4512FF12551e0A598B8f45eb610550bE)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x35f7C5D0e916B9650DA1e47006FEf59cdCD4B452)
 */
export function useStoreFrontPayee<
  TSelectData = ReadContractResult<typeof storeFrontABI, 'payee'>,
>(
  config: Omit<
    UseContractReadConfig<typeof storeFrontABI, 'payee', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof storeFrontAddress } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractRead({
    abi: storeFrontABI,
    address: storeFrontAddress[chainId as keyof typeof storeFrontAddress],
    functionName: 'payee',
    ...config,
  } as UseContractReadConfig<typeof storeFrontABI, 'payee', TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link storeFrontABI}__ and `functionName` set to `"releasable"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51AEe8Cb4512FF12551e0A598B8f45eb610550bE)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x35f7C5D0e916B9650DA1e47006FEf59cdCD4B452)
 */
export function useStoreFrontReleasable<
  TSelectData = ReadContractResult<typeof storeFrontABI, 'releasable'>,
>(
  config: Omit<
    UseContractReadConfig<typeof storeFrontABI, 'releasable', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof storeFrontAddress } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractRead({
    abi: storeFrontABI,
    address: storeFrontAddress[chainId as keyof typeof storeFrontAddress],
    functionName: 'releasable',
    ...config,
  } as UseContractReadConfig<typeof storeFrontABI, 'releasable', TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link storeFrontABI}__ and `functionName` set to `"released"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51AEe8Cb4512FF12551e0A598B8f45eb610550bE)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x35f7C5D0e916B9650DA1e47006FEf59cdCD4B452)
 */
export function useStoreFrontReleased<
  TSelectData = ReadContractResult<typeof storeFrontABI, 'released'>,
>(
  config: Omit<
    UseContractReadConfig<typeof storeFrontABI, 'released', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof storeFrontAddress } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractRead({
    abi: storeFrontABI,
    address: storeFrontAddress[chainId as keyof typeof storeFrontAddress],
    functionName: 'released',
    ...config,
  } as UseContractReadConfig<typeof storeFrontABI, 'released', TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link storeFrontABI}__ and `functionName` set to `"requiredOwnerOf"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51AEe8Cb4512FF12551e0A598B8f45eb610550bE)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x35f7C5D0e916B9650DA1e47006FEf59cdCD4B452)
 */
export function useStoreFrontRequiredOwnerOf<
  TSelectData = ReadContractResult<typeof storeFrontABI, 'requiredOwnerOf'>,
>(
  config: Omit<
    UseContractReadConfig<typeof storeFrontABI, 'requiredOwnerOf', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof storeFrontAddress } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractRead({
    abi: storeFrontABI,
    address: storeFrontAddress[chainId as keyof typeof storeFrontAddress],
    functionName: 'requiredOwnerOf',
    ...config,
  } as UseContractReadConfig<
    typeof storeFrontABI,
    'requiredOwnerOf',
    TSelectData
  >);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link storeFrontABI}__ and `functionName` set to `"shares"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51AEe8Cb4512FF12551e0A598B8f45eb610550bE)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x35f7C5D0e916B9650DA1e47006FEf59cdCD4B452)
 */
export function useStoreFrontShares<
  TSelectData = ReadContractResult<typeof storeFrontABI, 'shares'>,
>(
  config: Omit<
    UseContractReadConfig<typeof storeFrontABI, 'shares', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof storeFrontAddress } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractRead({
    abi: storeFrontABI,
    address: storeFrontAddress[chainId as keyof typeof storeFrontAddress],
    functionName: 'shares',
    ...config,
  } as UseContractReadConfig<typeof storeFrontABI, 'shares', TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link storeFrontABI}__ and `functionName` set to `"supportsInterface"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51AEe8Cb4512FF12551e0A598B8f45eb610550bE)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x35f7C5D0e916B9650DA1e47006FEf59cdCD4B452)
 */
export function useStoreFrontSupportsInterface<
  TSelectData = ReadContractResult<typeof storeFrontABI, 'supportsInterface'>,
>(
  config: Omit<
    UseContractReadConfig<
      typeof storeFrontABI,
      'supportsInterface',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof storeFrontAddress } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractRead({
    abi: storeFrontABI,
    address: storeFrontAddress[chainId as keyof typeof storeFrontAddress],
    functionName: 'supportsInterface',
    ...config,
  } as UseContractReadConfig<
    typeof storeFrontABI,
    'supportsInterface',
    TSelectData
  >);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link storeFrontABI}__ and `functionName` set to `"tokenAddress"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51AEe8Cb4512FF12551e0A598B8f45eb610550bE)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x35f7C5D0e916B9650DA1e47006FEf59cdCD4B452)
 */
export function useStoreFrontTokenAddress<
  TSelectData = ReadContractResult<typeof storeFrontABI, 'tokenAddress'>,
>(
  config: Omit<
    UseContractReadConfig<typeof storeFrontABI, 'tokenAddress', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof storeFrontAddress } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractRead({
    abi: storeFrontABI,
    address: storeFrontAddress[chainId as keyof typeof storeFrontAddress],
    functionName: 'tokenAddress',
    ...config,
  } as UseContractReadConfig<
    typeof storeFrontABI,
    'tokenAddress',
    TSelectData
  >);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link storeFrontABI}__ and `functionName` set to `"totalReleased"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51AEe8Cb4512FF12551e0A598B8f45eb610550bE)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x35f7C5D0e916B9650DA1e47006FEf59cdCD4B452)
 */
export function useStoreFrontTotalReleased<
  TSelectData = ReadContractResult<typeof storeFrontABI, 'totalReleased'>,
>(
  config: Omit<
    UseContractReadConfig<typeof storeFrontABI, 'totalReleased', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof storeFrontAddress } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractRead({
    abi: storeFrontABI,
    address: storeFrontAddress[chainId as keyof typeof storeFrontAddress],
    functionName: 'totalReleased',
    ...config,
  } as UseContractReadConfig<
    typeof storeFrontABI,
    'totalReleased',
    TSelectData
  >);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link storeFrontABI}__ and `functionName` set to `"totalShares"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51AEe8Cb4512FF12551e0A598B8f45eb610550bE)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x35f7C5D0e916B9650DA1e47006FEf59cdCD4B452)
 */
export function useStoreFrontTotalShares<
  TSelectData = ReadContractResult<typeof storeFrontABI, 'totalShares'>,
>(
  config: Omit<
    UseContractReadConfig<typeof storeFrontABI, 'totalShares', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof storeFrontAddress } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractRead({
    abi: storeFrontABI,
    address: storeFrontAddress[chainId as keyof typeof storeFrontAddress],
    functionName: 'totalShares',
    ...config,
  } as UseContractReadConfig<typeof storeFrontABI, 'totalShares', TSelectData>);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link storeFrontABI}__.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51AEe8Cb4512FF12551e0A598B8f45eb610550bE)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x35f7C5D0e916B9650DA1e47006FEf59cdCD4B452)
 */
export function useStoreFrontWrite<
  TMode extends WriteContractMode,
  TFunctionName extends string,
  TChainId extends number = keyof typeof storeFrontAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof storeFrontABI, string>['abi'],
        TFunctionName
      > & { address?: Address; chainId?: TChainId }
    : UseContractWriteConfig<TMode, typeof storeFrontABI, TFunctionName> & {
        abi?: never;
        address?: never;
        chainId?: TChainId;
      } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractWrite<TMode, typeof storeFrontABI, TFunctionName>({
    abi: storeFrontABI,
    address: storeFrontAddress[chainId as keyof typeof storeFrontAddress],
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link storeFrontABI}__ and `functionName` set to `"burnAndClaim"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51AEe8Cb4512FF12551e0A598B8f45eb610550bE)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x35f7C5D0e916B9650DA1e47006FEf59cdCD4B452)
 */
export function useStoreFrontBurnAndClaim<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof storeFrontAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof storeFrontABI, 'burnAndClaim'>['abi'],
        'burnAndClaim'
      > & {
        address?: Address;
        chainId?: TChainId;
        functionName?: 'burnAndClaim';
      }
    : UseContractWriteConfig<TMode, typeof storeFrontABI, 'burnAndClaim'> & {
        abi?: never;
        address?: never;
        chainId?: TChainId;
        functionName?: 'burnAndClaim';
      } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractWrite<TMode, typeof storeFrontABI, 'burnAndClaim'>({
    abi: storeFrontABI,
    address: storeFrontAddress[chainId as keyof typeof storeFrontAddress],
    functionName: 'burnAndClaim',
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link storeFrontABI}__ and `functionName` set to `"claim"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51AEe8Cb4512FF12551e0A598B8f45eb610550bE)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x35f7C5D0e916B9650DA1e47006FEf59cdCD4B452)
 */
export function useStoreFrontClaim<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof storeFrontAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof storeFrontABI, 'claim'>['abi'],
        'claim'
      > & { address?: Address; chainId?: TChainId; functionName?: 'claim' }
    : UseContractWriteConfig<TMode, typeof storeFrontABI, 'claim'> & {
        abi?: never;
        address?: never;
        chainId?: TChainId;
        functionName?: 'claim';
      } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractWrite<TMode, typeof storeFrontABI, 'claim'>({
    abi: storeFrontABI,
    address: storeFrontAddress[chainId as keyof typeof storeFrontAddress],
    functionName: 'claim',
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link storeFrontABI}__ and `functionName` set to `"freeClaim"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51AEe8Cb4512FF12551e0A598B8f45eb610550bE)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x35f7C5D0e916B9650DA1e47006FEf59cdCD4B452)
 */
export function useStoreFrontFreeClaim<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof storeFrontAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof storeFrontABI, 'freeClaim'>['abi'],
        'freeClaim'
      > & { address?: Address; chainId?: TChainId; functionName?: 'freeClaim' }
    : UseContractWriteConfig<TMode, typeof storeFrontABI, 'freeClaim'> & {
        abi?: never;
        address?: never;
        chainId?: TChainId;
        functionName?: 'freeClaim';
      } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractWrite<TMode, typeof storeFrontABI, 'freeClaim'>({
    abi: storeFrontABI,
    address: storeFrontAddress[chainId as keyof typeof storeFrontAddress],
    functionName: 'freeClaim',
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link storeFrontABI}__ and `functionName` set to `"grantRole"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51AEe8Cb4512FF12551e0A598B8f45eb610550bE)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x35f7C5D0e916B9650DA1e47006FEf59cdCD4B452)
 */
export function useStoreFrontGrantRole<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof storeFrontAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof storeFrontABI, 'grantRole'>['abi'],
        'grantRole'
      > & { address?: Address; chainId?: TChainId; functionName?: 'grantRole' }
    : UseContractWriteConfig<TMode, typeof storeFrontABI, 'grantRole'> & {
        abi?: never;
        address?: never;
        chainId?: TChainId;
        functionName?: 'grantRole';
      } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractWrite<TMode, typeof storeFrontABI, 'grantRole'>({
    abi: storeFrontABI,
    address: storeFrontAddress[chainId as keyof typeof storeFrontAddress],
    functionName: 'grantRole',
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link storeFrontABI}__ and `functionName` set to `"pause"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51AEe8Cb4512FF12551e0A598B8f45eb610550bE)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x35f7C5D0e916B9650DA1e47006FEf59cdCD4B452)
 */
export function useStoreFrontPause<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof storeFrontAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof storeFrontABI, 'pause'>['abi'],
        'pause'
      > & { address?: Address; chainId?: TChainId; functionName?: 'pause' }
    : UseContractWriteConfig<TMode, typeof storeFrontABI, 'pause'> & {
        abi?: never;
        address?: never;
        chainId?: TChainId;
        functionName?: 'pause';
      } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractWrite<TMode, typeof storeFrontABI, 'pause'>({
    abi: storeFrontABI,
    address: storeFrontAddress[chainId as keyof typeof storeFrontAddress],
    functionName: 'pause',
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link storeFrontABI}__ and `functionName` set to `"release"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51AEe8Cb4512FF12551e0A598B8f45eb610550bE)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x35f7C5D0e916B9650DA1e47006FEf59cdCD4B452)
 */
export function useStoreFrontRelease<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof storeFrontAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof storeFrontABI, 'release'>['abi'],
        'release'
      > & { address?: Address; chainId?: TChainId; functionName?: 'release' }
    : UseContractWriteConfig<TMode, typeof storeFrontABI, 'release'> & {
        abi?: never;
        address?: never;
        chainId?: TChainId;
        functionName?: 'release';
      } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractWrite<TMode, typeof storeFrontABI, 'release'>({
    abi: storeFrontABI,
    address: storeFrontAddress[chainId as keyof typeof storeFrontAddress],
    functionName: 'release',
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link storeFrontABI}__ and `functionName` set to `"renounceRole"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51AEe8Cb4512FF12551e0A598B8f45eb610550bE)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x35f7C5D0e916B9650DA1e47006FEf59cdCD4B452)
 */
export function useStoreFrontRenounceRole<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof storeFrontAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof storeFrontABI, 'renounceRole'>['abi'],
        'renounceRole'
      > & {
        address?: Address;
        chainId?: TChainId;
        functionName?: 'renounceRole';
      }
    : UseContractWriteConfig<TMode, typeof storeFrontABI, 'renounceRole'> & {
        abi?: never;
        address?: never;
        chainId?: TChainId;
        functionName?: 'renounceRole';
      } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractWrite<TMode, typeof storeFrontABI, 'renounceRole'>({
    abi: storeFrontABI,
    address: storeFrontAddress[chainId as keyof typeof storeFrontAddress],
    functionName: 'renounceRole',
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link storeFrontABI}__ and `functionName` set to `"resetClaimed"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51AEe8Cb4512FF12551e0A598B8f45eb610550bE)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x35f7C5D0e916B9650DA1e47006FEf59cdCD4B452)
 */
export function useStoreFrontResetClaimed<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof storeFrontAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof storeFrontABI, 'resetClaimed'>['abi'],
        'resetClaimed'
      > & {
        address?: Address;
        chainId?: TChainId;
        functionName?: 'resetClaimed';
      }
    : UseContractWriteConfig<TMode, typeof storeFrontABI, 'resetClaimed'> & {
        abi?: never;
        address?: never;
        chainId?: TChainId;
        functionName?: 'resetClaimed';
      } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractWrite<TMode, typeof storeFrontABI, 'resetClaimed'>({
    abi: storeFrontABI,
    address: storeFrontAddress[chainId as keyof typeof storeFrontAddress],
    functionName: 'resetClaimed',
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link storeFrontABI}__ and `functionName` set to `"resetClaimedList"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51AEe8Cb4512FF12551e0A598B8f45eb610550bE)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x35f7C5D0e916B9650DA1e47006FEf59cdCD4B452)
 */
export function useStoreFrontResetClaimedList<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof storeFrontAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof storeFrontABI,
          'resetClaimedList'
        >['abi'],
        'resetClaimedList'
      > & {
        address?: Address;
        chainId?: TChainId;
        functionName?: 'resetClaimedList';
      }
    : UseContractWriteConfig<
        TMode,
        typeof storeFrontABI,
        'resetClaimedList'
      > & {
        abi?: never;
        address?: never;
        chainId?: TChainId;
        functionName?: 'resetClaimedList';
      } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractWrite<TMode, typeof storeFrontABI, 'resetClaimedList'>({
    abi: storeFrontABI,
    address: storeFrontAddress[chainId as keyof typeof storeFrontAddress],
    functionName: 'resetClaimedList',
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link storeFrontABI}__ and `functionName` set to `"revokeRole"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51AEe8Cb4512FF12551e0A598B8f45eb610550bE)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x35f7C5D0e916B9650DA1e47006FEf59cdCD4B452)
 */
export function useStoreFrontRevokeRole<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof storeFrontAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof storeFrontABI, 'revokeRole'>['abi'],
        'revokeRole'
      > & { address?: Address; chainId?: TChainId; functionName?: 'revokeRole' }
    : UseContractWriteConfig<TMode, typeof storeFrontABI, 'revokeRole'> & {
        abi?: never;
        address?: never;
        chainId?: TChainId;
        functionName?: 'revokeRole';
      } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractWrite<TMode, typeof storeFrontABI, 'revokeRole'>({
    abi: storeFrontABI,
    address: storeFrontAddress[chainId as keyof typeof storeFrontAddress],
    functionName: 'revokeRole',
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link storeFrontABI}__ and `functionName` set to `"setClaimed"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51AEe8Cb4512FF12551e0A598B8f45eb610550bE)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x35f7C5D0e916B9650DA1e47006FEf59cdCD4B452)
 */
export function useStoreFrontSetClaimed<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof storeFrontAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof storeFrontABI, 'setClaimed'>['abi'],
        'setClaimed'
      > & { address?: Address; chainId?: TChainId; functionName?: 'setClaimed' }
    : UseContractWriteConfig<TMode, typeof storeFrontABI, 'setClaimed'> & {
        abi?: never;
        address?: never;
        chainId?: TChainId;
        functionName?: 'setClaimed';
      } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractWrite<TMode, typeof storeFrontABI, 'setClaimed'>({
    abi: storeFrontABI,
    address: storeFrontAddress[chainId as keyof typeof storeFrontAddress],
    functionName: 'setClaimed',
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link storeFrontABI}__ and `functionName` set to `"setCurrentEditionId"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51AEe8Cb4512FF12551e0A598B8f45eb610550bE)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x35f7C5D0e916B9650DA1e47006FEf59cdCD4B452)
 */
export function useStoreFrontSetCurrentEditionId<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof storeFrontAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof storeFrontABI,
          'setCurrentEditionId'
        >['abi'],
        'setCurrentEditionId'
      > & {
        address?: Address;
        chainId?: TChainId;
        functionName?: 'setCurrentEditionId';
      }
    : UseContractWriteConfig<
        TMode,
        typeof storeFrontABI,
        'setCurrentEditionId'
      > & {
        abi?: never;
        address?: never;
        chainId?: TChainId;
        functionName?: 'setCurrentEditionId';
      } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractWrite<TMode, typeof storeFrontABI, 'setCurrentEditionId'>({
    abi: storeFrontABI,
    address: storeFrontAddress[chainId as keyof typeof storeFrontAddress],
    functionName: 'setCurrentEditionId',
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link storeFrontABI}__ and `functionName` set to `"setMintEnd"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51AEe8Cb4512FF12551e0A598B8f45eb610550bE)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x35f7C5D0e916B9650DA1e47006FEf59cdCD4B452)
 */
export function useStoreFrontSetMintEnd<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof storeFrontAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof storeFrontABI, 'setMintEnd'>['abi'],
        'setMintEnd'
      > & { address?: Address; chainId?: TChainId; functionName?: 'setMintEnd' }
    : UseContractWriteConfig<TMode, typeof storeFrontABI, 'setMintEnd'> & {
        abi?: never;
        address?: never;
        chainId?: TChainId;
        functionName?: 'setMintEnd';
      } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractWrite<TMode, typeof storeFrontABI, 'setMintEnd'>({
    abi: storeFrontABI,
    address: storeFrontAddress[chainId as keyof typeof storeFrontAddress],
    functionName: 'setMintEnd',
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link storeFrontABI}__ and `functionName` set to `"setMintPerMld"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51AEe8Cb4512FF12551e0A598B8f45eb610550bE)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x35f7C5D0e916B9650DA1e47006FEf59cdCD4B452)
 */
export function useStoreFrontSetMintPerMld<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof storeFrontAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof storeFrontABI,
          'setMintPerMld'
        >['abi'],
        'setMintPerMld'
      > & {
        address?: Address;
        chainId?: TChainId;
        functionName?: 'setMintPerMld';
      }
    : UseContractWriteConfig<TMode, typeof storeFrontABI, 'setMintPerMld'> & {
        abi?: never;
        address?: never;
        chainId?: TChainId;
        functionName?: 'setMintPerMld';
      } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractWrite<TMode, typeof storeFrontABI, 'setMintPerMld'>({
    abi: storeFrontABI,
    address: storeFrontAddress[chainId as keyof typeof storeFrontAddress],
    functionName: 'setMintPerMld',
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link storeFrontABI}__ and `functionName` set to `"setMintPrice"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51AEe8Cb4512FF12551e0A598B8f45eb610550bE)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x35f7C5D0e916B9650DA1e47006FEf59cdCD4B452)
 */
export function useStoreFrontSetMintPrice<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof storeFrontAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof storeFrontABI, 'setMintPrice'>['abi'],
        'setMintPrice'
      > & {
        address?: Address;
        chainId?: TChainId;
        functionName?: 'setMintPrice';
      }
    : UseContractWriteConfig<TMode, typeof storeFrontABI, 'setMintPrice'> & {
        abi?: never;
        address?: never;
        chainId?: TChainId;
        functionName?: 'setMintPrice';
      } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractWrite<TMode, typeof storeFrontABI, 'setMintPrice'>({
    abi: storeFrontABI,
    address: storeFrontAddress[chainId as keyof typeof storeFrontAddress],
    functionName: 'setMintPrice',
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link storeFrontABI}__ and `functionName` set to `"setMintStart"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51AEe8Cb4512FF12551e0A598B8f45eb610550bE)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x35f7C5D0e916B9650DA1e47006FEf59cdCD4B452)
 */
export function useStoreFrontSetMintStart<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof storeFrontAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof storeFrontABI, 'setMintStart'>['abi'],
        'setMintStart'
      > & {
        address?: Address;
        chainId?: TChainId;
        functionName?: 'setMintStart';
      }
    : UseContractWriteConfig<TMode, typeof storeFrontABI, 'setMintStart'> & {
        abi?: never;
        address?: never;
        chainId?: TChainId;
        functionName?: 'setMintStart';
      } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractWrite<TMode, typeof storeFrontABI, 'setMintStart'>({
    abi: storeFrontABI,
    address: storeFrontAddress[chainId as keyof typeof storeFrontAddress],
    functionName: 'setMintStart',
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link storeFrontABI}__ and `functionName` set to `"setTokenAddress"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51AEe8Cb4512FF12551e0A598B8f45eb610550bE)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x35f7C5D0e916B9650DA1e47006FEf59cdCD4B452)
 */
export function useStoreFrontSetTokenAddress<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof storeFrontAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof storeFrontABI,
          'setTokenAddress'
        >['abi'],
        'setTokenAddress'
      > & {
        address?: Address;
        chainId?: TChainId;
        functionName?: 'setTokenAddress';
      }
    : UseContractWriteConfig<TMode, typeof storeFrontABI, 'setTokenAddress'> & {
        abi?: never;
        address?: never;
        chainId?: TChainId;
        functionName?: 'setTokenAddress';
      } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractWrite<TMode, typeof storeFrontABI, 'setTokenAddress'>({
    abi: storeFrontABI,
    address: storeFrontAddress[chainId as keyof typeof storeFrontAddress],
    functionName: 'setTokenAddress',
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link storeFrontABI}__ and `functionName` set to `"setupMint"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51AEe8Cb4512FF12551e0A598B8f45eb610550bE)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x35f7C5D0e916B9650DA1e47006FEf59cdCD4B452)
 */
export function useStoreFrontSetupMint<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof storeFrontAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof storeFrontABI, 'setupMint'>['abi'],
        'setupMint'
      > & { address?: Address; chainId?: TChainId; functionName?: 'setupMint' }
    : UseContractWriteConfig<TMode, typeof storeFrontABI, 'setupMint'> & {
        abi?: never;
        address?: never;
        chainId?: TChainId;
        functionName?: 'setupMint';
      } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractWrite<TMode, typeof storeFrontABI, 'setupMint'>({
    abi: storeFrontABI,
    address: storeFrontAddress[chainId as keyof typeof storeFrontAddress],
    functionName: 'setupMint',
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link storeFrontABI}__ and `functionName` set to `"unpause"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51AEe8Cb4512FF12551e0A598B8f45eb610550bE)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x35f7C5D0e916B9650DA1e47006FEf59cdCD4B452)
 */
export function useStoreFrontUnpause<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof storeFrontAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof storeFrontABI, 'unpause'>['abi'],
        'unpause'
      > & { address?: Address; chainId?: TChainId; functionName?: 'unpause' }
    : UseContractWriteConfig<TMode, typeof storeFrontABI, 'unpause'> & {
        abi?: never;
        address?: never;
        chainId?: TChainId;
        functionName?: 'unpause';
      } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractWrite<TMode, typeof storeFrontABI, 'unpause'>({
    abi: storeFrontABI,
    address: storeFrontAddress[chainId as keyof typeof storeFrontAddress],
    functionName: 'unpause',
    ...config,
  } as any);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link storeFrontABI}__.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51AEe8Cb4512FF12551e0A598B8f45eb610550bE)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x35f7C5D0e916B9650DA1e47006FEf59cdCD4B452)
 */
export function usePrepareStoreFrontWrite<TFunctionName extends string>(
  config: Omit<
    UsePrepareContractWriteConfig<typeof storeFrontABI, TFunctionName>,
    'abi' | 'address'
  > & { chainId?: keyof typeof storeFrontAddress } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return usePrepareContractWrite({
    abi: storeFrontABI,
    address: storeFrontAddress[chainId as keyof typeof storeFrontAddress],
    ...config,
  } as UsePrepareContractWriteConfig<typeof storeFrontABI, TFunctionName>);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link storeFrontABI}__ and `functionName` set to `"burnAndClaim"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51AEe8Cb4512FF12551e0A598B8f45eb610550bE)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x35f7C5D0e916B9650DA1e47006FEf59cdCD4B452)
 */
export function usePrepareStoreFrontBurnAndClaim(
  config: Omit<
    UsePrepareContractWriteConfig<typeof storeFrontABI, 'burnAndClaim'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof storeFrontAddress } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return usePrepareContractWrite({
    abi: storeFrontABI,
    address: storeFrontAddress[chainId as keyof typeof storeFrontAddress],
    functionName: 'burnAndClaim',
    ...config,
  } as UsePrepareContractWriteConfig<typeof storeFrontABI, 'burnAndClaim'>);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link storeFrontABI}__ and `functionName` set to `"claim"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51AEe8Cb4512FF12551e0A598B8f45eb610550bE)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x35f7C5D0e916B9650DA1e47006FEf59cdCD4B452)
 */
export function usePrepareStoreFrontClaim(
  config: Omit<
    UsePrepareContractWriteConfig<typeof storeFrontABI, 'claim'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof storeFrontAddress } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return usePrepareContractWrite({
    abi: storeFrontABI,
    address: storeFrontAddress[chainId as keyof typeof storeFrontAddress],
    functionName: 'claim',
    ...config,
  } as UsePrepareContractWriteConfig<typeof storeFrontABI, 'claim'>);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link storeFrontABI}__ and `functionName` set to `"freeClaim"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51AEe8Cb4512FF12551e0A598B8f45eb610550bE)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x35f7C5D0e916B9650DA1e47006FEf59cdCD4B452)
 */
export function usePrepareStoreFrontFreeClaim(
  config: Omit<
    UsePrepareContractWriteConfig<typeof storeFrontABI, 'freeClaim'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof storeFrontAddress } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return usePrepareContractWrite({
    abi: storeFrontABI,
    address: storeFrontAddress[chainId as keyof typeof storeFrontAddress],
    functionName: 'freeClaim',
    ...config,
  } as UsePrepareContractWriteConfig<typeof storeFrontABI, 'freeClaim'>);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link storeFrontABI}__ and `functionName` set to `"grantRole"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51AEe8Cb4512FF12551e0A598B8f45eb610550bE)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x35f7C5D0e916B9650DA1e47006FEf59cdCD4B452)
 */
export function usePrepareStoreFrontGrantRole(
  config: Omit<
    UsePrepareContractWriteConfig<typeof storeFrontABI, 'grantRole'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof storeFrontAddress } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return usePrepareContractWrite({
    abi: storeFrontABI,
    address: storeFrontAddress[chainId as keyof typeof storeFrontAddress],
    functionName: 'grantRole',
    ...config,
  } as UsePrepareContractWriteConfig<typeof storeFrontABI, 'grantRole'>);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link storeFrontABI}__ and `functionName` set to `"pause"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51AEe8Cb4512FF12551e0A598B8f45eb610550bE)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x35f7C5D0e916B9650DA1e47006FEf59cdCD4B452)
 */
export function usePrepareStoreFrontPause(
  config: Omit<
    UsePrepareContractWriteConfig<typeof storeFrontABI, 'pause'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof storeFrontAddress } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return usePrepareContractWrite({
    abi: storeFrontABI,
    address: storeFrontAddress[chainId as keyof typeof storeFrontAddress],
    functionName: 'pause',
    ...config,
  } as UsePrepareContractWriteConfig<typeof storeFrontABI, 'pause'>);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link storeFrontABI}__ and `functionName` set to `"release"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51AEe8Cb4512FF12551e0A598B8f45eb610550bE)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x35f7C5D0e916B9650DA1e47006FEf59cdCD4B452)
 */
export function usePrepareStoreFrontRelease(
  config: Omit<
    UsePrepareContractWriteConfig<typeof storeFrontABI, 'release'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof storeFrontAddress } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return usePrepareContractWrite({
    abi: storeFrontABI,
    address: storeFrontAddress[chainId as keyof typeof storeFrontAddress],
    functionName: 'release',
    ...config,
  } as UsePrepareContractWriteConfig<typeof storeFrontABI, 'release'>);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link storeFrontABI}__ and `functionName` set to `"renounceRole"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51AEe8Cb4512FF12551e0A598B8f45eb610550bE)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x35f7C5D0e916B9650DA1e47006FEf59cdCD4B452)
 */
export function usePrepareStoreFrontRenounceRole(
  config: Omit<
    UsePrepareContractWriteConfig<typeof storeFrontABI, 'renounceRole'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof storeFrontAddress } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return usePrepareContractWrite({
    abi: storeFrontABI,
    address: storeFrontAddress[chainId as keyof typeof storeFrontAddress],
    functionName: 'renounceRole',
    ...config,
  } as UsePrepareContractWriteConfig<typeof storeFrontABI, 'renounceRole'>);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link storeFrontABI}__ and `functionName` set to `"resetClaimed"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51AEe8Cb4512FF12551e0A598B8f45eb610550bE)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x35f7C5D0e916B9650DA1e47006FEf59cdCD4B452)
 */
export function usePrepareStoreFrontResetClaimed(
  config: Omit<
    UsePrepareContractWriteConfig<typeof storeFrontABI, 'resetClaimed'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof storeFrontAddress } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return usePrepareContractWrite({
    abi: storeFrontABI,
    address: storeFrontAddress[chainId as keyof typeof storeFrontAddress],
    functionName: 'resetClaimed',
    ...config,
  } as UsePrepareContractWriteConfig<typeof storeFrontABI, 'resetClaimed'>);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link storeFrontABI}__ and `functionName` set to `"resetClaimedList"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51AEe8Cb4512FF12551e0A598B8f45eb610550bE)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x35f7C5D0e916B9650DA1e47006FEf59cdCD4B452)
 */
export function usePrepareStoreFrontResetClaimedList(
  config: Omit<
    UsePrepareContractWriteConfig<typeof storeFrontABI, 'resetClaimedList'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof storeFrontAddress } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return usePrepareContractWrite({
    abi: storeFrontABI,
    address: storeFrontAddress[chainId as keyof typeof storeFrontAddress],
    functionName: 'resetClaimedList',
    ...config,
  } as UsePrepareContractWriteConfig<typeof storeFrontABI, 'resetClaimedList'>);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link storeFrontABI}__ and `functionName` set to `"revokeRole"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51AEe8Cb4512FF12551e0A598B8f45eb610550bE)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x35f7C5D0e916B9650DA1e47006FEf59cdCD4B452)
 */
export function usePrepareStoreFrontRevokeRole(
  config: Omit<
    UsePrepareContractWriteConfig<typeof storeFrontABI, 'revokeRole'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof storeFrontAddress } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return usePrepareContractWrite({
    abi: storeFrontABI,
    address: storeFrontAddress[chainId as keyof typeof storeFrontAddress],
    functionName: 'revokeRole',
    ...config,
  } as UsePrepareContractWriteConfig<typeof storeFrontABI, 'revokeRole'>);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link storeFrontABI}__ and `functionName` set to `"setClaimed"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51AEe8Cb4512FF12551e0A598B8f45eb610550bE)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x35f7C5D0e916B9650DA1e47006FEf59cdCD4B452)
 */
export function usePrepareStoreFrontSetClaimed(
  config: Omit<
    UsePrepareContractWriteConfig<typeof storeFrontABI, 'setClaimed'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof storeFrontAddress } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return usePrepareContractWrite({
    abi: storeFrontABI,
    address: storeFrontAddress[chainId as keyof typeof storeFrontAddress],
    functionName: 'setClaimed',
    ...config,
  } as UsePrepareContractWriteConfig<typeof storeFrontABI, 'setClaimed'>);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link storeFrontABI}__ and `functionName` set to `"setCurrentEditionId"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51AEe8Cb4512FF12551e0A598B8f45eb610550bE)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x35f7C5D0e916B9650DA1e47006FEf59cdCD4B452)
 */
export function usePrepareStoreFrontSetCurrentEditionId(
  config: Omit<
    UsePrepareContractWriteConfig<typeof storeFrontABI, 'setCurrentEditionId'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof storeFrontAddress } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return usePrepareContractWrite({
    abi: storeFrontABI,
    address: storeFrontAddress[chainId as keyof typeof storeFrontAddress],
    functionName: 'setCurrentEditionId',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof storeFrontABI,
    'setCurrentEditionId'
  >);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link storeFrontABI}__ and `functionName` set to `"setMintEnd"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51AEe8Cb4512FF12551e0A598B8f45eb610550bE)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x35f7C5D0e916B9650DA1e47006FEf59cdCD4B452)
 */
export function usePrepareStoreFrontSetMintEnd(
  config: Omit<
    UsePrepareContractWriteConfig<typeof storeFrontABI, 'setMintEnd'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof storeFrontAddress } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return usePrepareContractWrite({
    abi: storeFrontABI,
    address: storeFrontAddress[chainId as keyof typeof storeFrontAddress],
    functionName: 'setMintEnd',
    ...config,
  } as UsePrepareContractWriteConfig<typeof storeFrontABI, 'setMintEnd'>);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link storeFrontABI}__ and `functionName` set to `"setMintPerMld"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51AEe8Cb4512FF12551e0A598B8f45eb610550bE)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x35f7C5D0e916B9650DA1e47006FEf59cdCD4B452)
 */
export function usePrepareStoreFrontSetMintPerMld(
  config: Omit<
    UsePrepareContractWriteConfig<typeof storeFrontABI, 'setMintPerMld'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof storeFrontAddress } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return usePrepareContractWrite({
    abi: storeFrontABI,
    address: storeFrontAddress[chainId as keyof typeof storeFrontAddress],
    functionName: 'setMintPerMld',
    ...config,
  } as UsePrepareContractWriteConfig<typeof storeFrontABI, 'setMintPerMld'>);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link storeFrontABI}__ and `functionName` set to `"setMintPrice"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51AEe8Cb4512FF12551e0A598B8f45eb610550bE)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x35f7C5D0e916B9650DA1e47006FEf59cdCD4B452)
 */
export function usePrepareStoreFrontSetMintPrice(
  config: Omit<
    UsePrepareContractWriteConfig<typeof storeFrontABI, 'setMintPrice'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof storeFrontAddress } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return usePrepareContractWrite({
    abi: storeFrontABI,
    address: storeFrontAddress[chainId as keyof typeof storeFrontAddress],
    functionName: 'setMintPrice',
    ...config,
  } as UsePrepareContractWriteConfig<typeof storeFrontABI, 'setMintPrice'>);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link storeFrontABI}__ and `functionName` set to `"setMintStart"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51AEe8Cb4512FF12551e0A598B8f45eb610550bE)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x35f7C5D0e916B9650DA1e47006FEf59cdCD4B452)
 */
export function usePrepareStoreFrontSetMintStart(
  config: Omit<
    UsePrepareContractWriteConfig<typeof storeFrontABI, 'setMintStart'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof storeFrontAddress } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return usePrepareContractWrite({
    abi: storeFrontABI,
    address: storeFrontAddress[chainId as keyof typeof storeFrontAddress],
    functionName: 'setMintStart',
    ...config,
  } as UsePrepareContractWriteConfig<typeof storeFrontABI, 'setMintStart'>);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link storeFrontABI}__ and `functionName` set to `"setTokenAddress"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51AEe8Cb4512FF12551e0A598B8f45eb610550bE)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x35f7C5D0e916B9650DA1e47006FEf59cdCD4B452)
 */
export function usePrepareStoreFrontSetTokenAddress(
  config: Omit<
    UsePrepareContractWriteConfig<typeof storeFrontABI, 'setTokenAddress'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof storeFrontAddress } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return usePrepareContractWrite({
    abi: storeFrontABI,
    address: storeFrontAddress[chainId as keyof typeof storeFrontAddress],
    functionName: 'setTokenAddress',
    ...config,
  } as UsePrepareContractWriteConfig<typeof storeFrontABI, 'setTokenAddress'>);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link storeFrontABI}__ and `functionName` set to `"setupMint"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51AEe8Cb4512FF12551e0A598B8f45eb610550bE)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x35f7C5D0e916B9650DA1e47006FEf59cdCD4B452)
 */
export function usePrepareStoreFrontSetupMint(
  config: Omit<
    UsePrepareContractWriteConfig<typeof storeFrontABI, 'setupMint'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof storeFrontAddress } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return usePrepareContractWrite({
    abi: storeFrontABI,
    address: storeFrontAddress[chainId as keyof typeof storeFrontAddress],
    functionName: 'setupMint',
    ...config,
  } as UsePrepareContractWriteConfig<typeof storeFrontABI, 'setupMint'>);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link storeFrontABI}__ and `functionName` set to `"unpause"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51AEe8Cb4512FF12551e0A598B8f45eb610550bE)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x35f7C5D0e916B9650DA1e47006FEf59cdCD4B452)
 */
export function usePrepareStoreFrontUnpause(
  config: Omit<
    UsePrepareContractWriteConfig<typeof storeFrontABI, 'unpause'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof storeFrontAddress } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return usePrepareContractWrite({
    abi: storeFrontABI,
    address: storeFrontAddress[chainId as keyof typeof storeFrontAddress],
    functionName: 'unpause',
    ...config,
  } as UsePrepareContractWriteConfig<typeof storeFrontABI, 'unpause'>);
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link storeFrontABI}__.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51AEe8Cb4512FF12551e0A598B8f45eb610550bE)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x35f7C5D0e916B9650DA1e47006FEf59cdCD4B452)
 */
export function useStoreFrontEvent<TEventName extends string>(
  config: Omit<
    UseContractEventConfig<typeof storeFrontABI, TEventName>,
    'abi' | 'address'
  > & { chainId?: keyof typeof storeFrontAddress } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractEvent({
    abi: storeFrontABI,
    address: storeFrontAddress[chainId as keyof typeof storeFrontAddress],
    ...config,
  } as UseContractEventConfig<typeof storeFrontABI, TEventName>);
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link storeFrontABI}__ and `eventName` set to `"ERC20PaymentReleased"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51AEe8Cb4512FF12551e0A598B8f45eb610550bE)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x35f7C5D0e916B9650DA1e47006FEf59cdCD4B452)
 */
export function useStoreFrontErc20PaymentReleasedEvent(
  config: Omit<
    UseContractEventConfig<typeof storeFrontABI, 'ERC20PaymentReleased'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof storeFrontAddress } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractEvent({
    abi: storeFrontABI,
    address: storeFrontAddress[chainId as keyof typeof storeFrontAddress],
    eventName: 'ERC20PaymentReleased',
    ...config,
  } as UseContractEventConfig<typeof storeFrontABI, 'ERC20PaymentReleased'>);
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link storeFrontABI}__ and `eventName` set to `"Paused"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51AEe8Cb4512FF12551e0A598B8f45eb610550bE)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x35f7C5D0e916B9650DA1e47006FEf59cdCD4B452)
 */
export function useStoreFrontPausedEvent(
  config: Omit<
    UseContractEventConfig<typeof storeFrontABI, 'Paused'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof storeFrontAddress } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractEvent({
    abi: storeFrontABI,
    address: storeFrontAddress[chainId as keyof typeof storeFrontAddress],
    eventName: 'Paused',
    ...config,
  } as UseContractEventConfig<typeof storeFrontABI, 'Paused'>);
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link storeFrontABI}__ and `eventName` set to `"PayeeAdded"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51AEe8Cb4512FF12551e0A598B8f45eb610550bE)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x35f7C5D0e916B9650DA1e47006FEf59cdCD4B452)
 */
export function useStoreFrontPayeeAddedEvent(
  config: Omit<
    UseContractEventConfig<typeof storeFrontABI, 'PayeeAdded'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof storeFrontAddress } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractEvent({
    abi: storeFrontABI,
    address: storeFrontAddress[chainId as keyof typeof storeFrontAddress],
    eventName: 'PayeeAdded',
    ...config,
  } as UseContractEventConfig<typeof storeFrontABI, 'PayeeAdded'>);
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link storeFrontABI}__ and `eventName` set to `"PaymentReceived"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51AEe8Cb4512FF12551e0A598B8f45eb610550bE)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x35f7C5D0e916B9650DA1e47006FEf59cdCD4B452)
 */
export function useStoreFrontPaymentReceivedEvent(
  config: Omit<
    UseContractEventConfig<typeof storeFrontABI, 'PaymentReceived'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof storeFrontAddress } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractEvent({
    abi: storeFrontABI,
    address: storeFrontAddress[chainId as keyof typeof storeFrontAddress],
    eventName: 'PaymentReceived',
    ...config,
  } as UseContractEventConfig<typeof storeFrontABI, 'PaymentReceived'>);
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link storeFrontABI}__ and `eventName` set to `"PaymentReleased"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51AEe8Cb4512FF12551e0A598B8f45eb610550bE)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x35f7C5D0e916B9650DA1e47006FEf59cdCD4B452)
 */
export function useStoreFrontPaymentReleasedEvent(
  config: Omit<
    UseContractEventConfig<typeof storeFrontABI, 'PaymentReleased'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof storeFrontAddress } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractEvent({
    abi: storeFrontABI,
    address: storeFrontAddress[chainId as keyof typeof storeFrontAddress],
    eventName: 'PaymentReleased',
    ...config,
  } as UseContractEventConfig<typeof storeFrontABI, 'PaymentReleased'>);
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link storeFrontABI}__ and `eventName` set to `"RoleAdminChanged"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51AEe8Cb4512FF12551e0A598B8f45eb610550bE)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x35f7C5D0e916B9650DA1e47006FEf59cdCD4B452)
 */
export function useStoreFrontRoleAdminChangedEvent(
  config: Omit<
    UseContractEventConfig<typeof storeFrontABI, 'RoleAdminChanged'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof storeFrontAddress } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractEvent({
    abi: storeFrontABI,
    address: storeFrontAddress[chainId as keyof typeof storeFrontAddress],
    eventName: 'RoleAdminChanged',
    ...config,
  } as UseContractEventConfig<typeof storeFrontABI, 'RoleAdminChanged'>);
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link storeFrontABI}__ and `eventName` set to `"RoleGranted"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51AEe8Cb4512FF12551e0A598B8f45eb610550bE)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x35f7C5D0e916B9650DA1e47006FEf59cdCD4B452)
 */
export function useStoreFrontRoleGrantedEvent(
  config: Omit<
    UseContractEventConfig<typeof storeFrontABI, 'RoleGranted'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof storeFrontAddress } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractEvent({
    abi: storeFrontABI,
    address: storeFrontAddress[chainId as keyof typeof storeFrontAddress],
    eventName: 'RoleGranted',
    ...config,
  } as UseContractEventConfig<typeof storeFrontABI, 'RoleGranted'>);
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link storeFrontABI}__ and `eventName` set to `"RoleRevoked"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51AEe8Cb4512FF12551e0A598B8f45eb610550bE)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x35f7C5D0e916B9650DA1e47006FEf59cdCD4B452)
 */
export function useStoreFrontRoleRevokedEvent(
  config: Omit<
    UseContractEventConfig<typeof storeFrontABI, 'RoleRevoked'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof storeFrontAddress } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractEvent({
    abi: storeFrontABI,
    address: storeFrontAddress[chainId as keyof typeof storeFrontAddress],
    eventName: 'RoleRevoked',
    ...config,
  } as UseContractEventConfig<typeof storeFrontABI, 'RoleRevoked'>);
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link storeFrontABI}__ and `eventName` set to `"Unpaused"`.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51AEe8Cb4512FF12551e0A598B8f45eb610550bE)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x35f7C5D0e916B9650DA1e47006FEf59cdCD4B452)
 */
export function useStoreFrontUnpausedEvent(
  config: Omit<
    UseContractEventConfig<typeof storeFrontABI, 'Unpaused'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof storeFrontAddress } = {} as any,
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractEvent({
    abi: storeFrontABI,
    address: storeFrontAddress[chainId as keyof typeof storeFrontAddress],
    eventName: 'Unpaused',
    ...config,
  } as UseContractEventConfig<typeof storeFrontABI, 'Unpaused'>);
}
